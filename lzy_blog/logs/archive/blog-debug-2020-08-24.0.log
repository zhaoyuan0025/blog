2020-08-24 12:27:41.560 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 12:29:14.539 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 12:30:30.855 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 12:31:32.439 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 12:31:32.533 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 12:31:32.668 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 12:31:33.008 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 12:31:33.019 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 506(Long), {"code":20000,"data":{"token":"DE56D5FB9CD8BFD306C5618A15DF28CD"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 12:31:33.112 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 12:31:33.591 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 12:31:33.594 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 12:31:33.684 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 12:31:33.976 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 12:31:33.977 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 12:31:34.023 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 12:31:34.103 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 12:31:34.106 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 12:31:34.196 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 12:31:42.661 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 12:31:42.662 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 12:31:42.710 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 12:31:42.760 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 12:31:42.763 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 12:31:42.852 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 12:31:45.857 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 12:31:45.860 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 12:31:45.913 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 12:31:45.914 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 12:31:45.915 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 12:31:45.961 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 12:31:46.110 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 12:31:46.112 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 406(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 12:31:46.202 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:16:37.762 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 14:18:58.139 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 14:18:58.211 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 14:18:58.304 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 14:18:58.533 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:18:58.540 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 322(Long), {"code":20000,"data":{"token":"3AB316BD00353B54AD7BF8CED9717DEC"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:18:58.635 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:18:58.864 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:18:58.867 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:18:58.959 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:18:59.620 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:18:59.623 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:18:59.671 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:18:59.730 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:18:59.735 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:18:59.814 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:18:59.816 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:18:59.828 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:18:59.875 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 14:18:59.877 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:18:59.879 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:18:59.925 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:19:00.084 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:19:00.086 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 381(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:19:00.173 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:35:18.175 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:35:18.178 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:35:18.266 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:35:18.841 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:35:18.843 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:35:18.889 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:35:18.950 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:35:18.952 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:35:19.040 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:35:27.006 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:35:27.007 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:35:27.078 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 14:35:27.081 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:35:27.083 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:35:27.128 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:35:27.272 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:35:27.275 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 321(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:35:27.364 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:36:16.238 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:36:16.241 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:36:16.330 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:36:16.716 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:36:16.719 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:36:16.765 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:36:16.780 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:36:16.782 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:36:16.825 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:36:16.829 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:36:16.835 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 14:36:16.837 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:36:16.837 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:36:16.883 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:36:16.918 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:36:17.021 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:36:17.023 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 299(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:36:17.116 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:38:06.335 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 14:38:06.336 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 14:38:06.385 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 14:38:06.456 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:38:06.462 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 121(Long), {"code":20000,"data":{"token":"E96DE3713046F07B0912875B23A9156E"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:38:06.553 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:38:07.147 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:38:07.149 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:38:07.240 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:38:08.181 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:38:08.183 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:38:08.231 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:38:08.289 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:38:08.291 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 124(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:38:08.384 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:38:12.091 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:38:12.092 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:38:12.153 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 14:38:12.155 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:38:12.156 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:38:12.203 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:38:12.348 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:38:12.351 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 310(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:38:12.445 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:39:43.769 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog ( blog_id, blog_title, blog_image, blog_content,blog_type,blog_remark, blog_source ) values ( ?,?,?,?,?,?,? ) 
2020-08-24 14:39:43.822 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1297785643283275776(String), java反射--框架设计的灵魂(String), null, <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">反射</h1>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a id="_1" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>定义</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">通俗的讲，将类的各个组成部分封装为其他对象，这就是反射机制</p>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t2"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t2"></a><a id="_3" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>作用</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	1. 可以在程序运行过程中，操作这些对象。
	2. 可以解耦，提高程序的可扩展性。
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t3"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t3"></a><a id="_6" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>原理</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">先来了解下java代码在计算机中运行的几个阶段：<br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;" /><img style="box-sizing: border-box; outline: none; margin: auto; padding: 0px; border: 0px none; max-width: 100%; overflow-wrap: break-word; display: block; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20200818234212848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JpZ193aGl0ZV9weQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;" />对应上面的三个阶段，获取Class对象的方式有下面三种：</p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">1. Class.forName("全类名")：将字节码文件加载进内存，返回Class对象
	* 多用于配置文件，将类名定义在配置文件中。读取文件，加载类
2. 类名.class：通过类名的属性class获取
	* 多用于参数的传递
3. 对象.getClass()：getClass()方法在Object类中定义着。
	* 多用于对象的获取字节码的方式
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次，不论通过哪一种方式获取的Class对象都是同一个。</p>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t4"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t4"></a><a id="Class_20" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Class对象功能</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">1.</span> 获取成员变量们
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getFields</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> ：获取所有<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span>修饰的成员变量
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getField</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>   获取指定名称的 <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span>修饰的成员变量

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredFields</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  获取所有的成员变量，不考虑修饰符
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredField</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">2.</span> 获取构造方法们
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getConstructors</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token generics function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;"><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&lt;</span>T<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&gt;</span></span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getConstructor</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token generics function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;"><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&lt;</span>T<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&gt;</span></span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredConstructor</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredConstructors</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">3.</span> 获取成员方法们：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethods</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> 类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredMethods</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> 类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">4.</span> 获取全类名	
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> String <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getName</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">10</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">11</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">12</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">13</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">14</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">15</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">16</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">17</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">18</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">19</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">20</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">21</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t5"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t5"></a><a id="Field_45" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Field类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 操作成员变量：
	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">1.</span> 设置值
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">set</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> Object value<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">2.</span> 获取值
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">get</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> 

	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">3.</span> 忽略访问权限修饰符的安全检查
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">setAccessible</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token boolean" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">true</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">:</span>暴力反射
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t6"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t6"></a><a id="Constructor_59" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Constructor类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 创建对象（构造方法）：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> T <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">newInstance</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> initargs<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 如果使用空参数构造方法创建对象，操作可以简化：Class对象的newInstance方法
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t7"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t7"></a><a id="Method_67" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Method类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 执行方法：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Object <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">invoke</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> Object<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> args<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 获取方法名称：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> String getName<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">:</span>获取方法名
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t8"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t8"></a><a id="_77" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>示例</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">利用反射，写一个"框架"，不能改变该类的任何代码的前提下，可以帮我们创建任意类的对象，并且执行其中任意方法</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写一个学生类</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">package</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">Student</span> <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>


    <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">sleep</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
        System<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>out<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">println</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"sleep..."</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
    <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写配置文件 pro.properties</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">className<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span>cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Student
methodName<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span>sleep
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写框架类</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">package</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>reflect<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Person<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Student<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>io<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>IOException<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>io<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>InputStream<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>lang<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>reflect<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>util<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Properties<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">/**
 * 框架类
 */</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">ReflectTest</span> <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
    <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">static</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">main</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> args<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">throws</span> Exception <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//可以创建任意类的对象，可以执行任意方法</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.加载配置文件</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.1创建Properties对象</span>
        Properties pro <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">new</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">Properties</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.2加载配置文件，转换为一个集合</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.2.1获取class目录下的配置文件</span>
        ClassLoader classLoader <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> ReflectTest<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getClassLoader</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        InputStream is <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> classLoader<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getResourceAsStream</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"pro.properties"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">load</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>is<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//2.获取配置文件中定义的数据</span>
        String className <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getProperty</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"className"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        String methodName <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getProperty</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"methodName"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//3.加载该类进内存</span>
        Class <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">cls</span> <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> Class<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">forName</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>className<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//4.创建对象</span>
        Object obj <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> cls<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">newInstance</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//5.获取方法对象</span>
        Method method <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> cls<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>methodName<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//6.执行方法</span>
        method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">invoke</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
    <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">10</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">11</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">12</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">13</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">14</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">15</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">16</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">17</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">18</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">19</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">20</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">21</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">22</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">23</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">24</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">25</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">26</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">27</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">28</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">29</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">30</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">31</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">32</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">33</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">34</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">35</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">36</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">37</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">38</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">39</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">40</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">这样就通过反射机制实现了一个简单&rsquo;框架&rsquo;的编写</p>(String), 1(Integer), 手写反射框架(String), null
2020-08-24 14:39:45.323 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:39:45.390 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:39:45.470 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">反射</h1>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a id="_1" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>定义</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">通俗的讲，将类的各个组成部分封装为其他对象，这就是反射机制</p>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t2"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t2"></a><a id="_3" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>作用</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	1. 可以在程序运行过程中，操作这些对象。
	2. 可以解耦，提高程序的可扩展性。
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t3"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t3"></a><a id="_6" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>原理</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">先来了解下java代码在计算机中运行的几个阶段：<br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;" /><img style="box-sizing: border-box; outline: none; margin: auto; padding: 0px; border: 0px none; max-width: 100%; overflow-wrap: break-word; display: block; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20200818234212848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JpZ193aGl0ZV9weQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;" />对应上面的三个阶段，获取Class对象的方式有下面三种：</p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">1. Class.forName("全类名")：将字节码文件加载进内存，返回Class对象
	* 多用于配置文件，将类名定义在配置文件中。读取文件，加载类
2. 类名.class：通过类名的属性class获取
	* 多用于参数的传递
3. 对象.getClass()：getClass()方法在Object类中定义着。
	* 多用于对象的获取字节码的方式
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次，不论通过哪一种方式获取的Class对象都是同一个。</p>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t4"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t4"></a><a id="Class_20" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Class对象功能</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">1.</span> 获取成员变量们
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getFields</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> ：获取所有<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span>修饰的成员变量
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getField</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>   获取指定名称的 <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span>修饰的成员变量

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredFields</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  获取所有的成员变量，不考虑修饰符
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Field <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredField</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">2.</span> 获取构造方法们
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getConstructors</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token generics function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;"><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&lt;</span>T<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&gt;</span></span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getConstructor</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token generics function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;"><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&lt;</span>T<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">&gt;</span></span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredConstructor</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Constructor<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredConstructors</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">3.</span> 获取成员方法们：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethods</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> 类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredMethods</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Method <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getDeclaredMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String name<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> 类<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&lt;</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">?</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">&gt;</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> parameterTypes<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">4.</span> 获取全类名	
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> String <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getName</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">10</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">11</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">12</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">13</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">14</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">15</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">16</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">17</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">18</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">19</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">20</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">21</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t5"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t5"></a><a id="Field_45" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Field类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 操作成员变量：
	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">1.</span> 设置值
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">set</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> Object value<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  
	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">2.</span> 获取值
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">get</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> 

	<span class="token number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">3.</span> 忽略访问权限修饰符的安全检查
		<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">setAccessible</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token boolean" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">true</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">:</span>暴力反射
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t6"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t6"></a><a id="Constructor_59" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Constructor类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 创建对象（构造方法）：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> T <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">newInstance</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> initargs<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 如果使用空参数构造方法创建对象，操作可以简化：Class对象的newInstance方法
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t7"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t7"></a><a id="Method_67" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>Method类</h2>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 执行方法：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> Object <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">invoke</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>Object obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">,</span> Object<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span> args<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span>  

<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> 获取方法名称：
	<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">*</span> String getName<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">:</span>获取方法名
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
</ul>
<h2 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t8"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;" name="t8"></a><a id="_77" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;"></a>示例</h2>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">利用反射，写一个"框架"，不能改变该类的任何代码的前提下，可以帮我们创建任意类的对象，并且执行其中任意方法</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写一个学生类</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">package</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">Student</span> <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>


    <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">sleep</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
        System<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>out<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">println</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"sleep..."</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
    <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写配置文件 pro.properties</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">className<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span>cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Student
methodName<span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span>sleep
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">编写框架类</strong></p>
<pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;"><code class="prism language-java has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">package</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>reflect<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Person<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> cn<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>itcast<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>domain<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Student<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>io<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>IOException<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>io<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>InputStream<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>lang<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>reflect<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">import</span> java<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>util<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span>Properties<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

<span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">/**
 * 框架类
 */</span>
<span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">ReflectTest</span> <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
    <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">public</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">static</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">void</span> <span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">main</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>String<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">[</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">]</span> args<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">throws</span> Exception <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">{</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//可以创建任意类的对象，可以执行任意方法</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.加载配置文件</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.1创建Properties对象</span>
        Properties pro <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> <span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">new</span> <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">Properties</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.2加载配置文件，转换为一个集合</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//1.2.1获取class目录下的配置文件</span>
        ClassLoader classLoader <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> ReflectTest<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;">class</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getClassLoader</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        InputStream is <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> classLoader<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getResourceAsStream</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"pro.properties"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">load</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>is<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//2.获取配置文件中定义的数据</span>
        String className <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getProperty</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"className"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        String methodName <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> pro<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getProperty</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;">"methodName"</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>

        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//3.加载该类进内存</span>
        Class <span class="token class-name" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;">cls</span> <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> Class<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">forName</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>className<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//4.创建对象</span>
        Object obj <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> cls<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">newInstance</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//5.获取方法对象</span>
        Method method <span class="token operator" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">=</span> cls<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">getMethod</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>methodName<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
        <span class="token comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;">//6.执行方法</span>
        method<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">.</span><span class="token function" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;">invoke</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">(</span>obj<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">)</span><span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">;</span>
    <span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
<span class="token punctuation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;">}</span>
</code></pre>
<ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;">
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">1</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">2</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">3</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">4</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">5</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">6</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">7</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">8</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">9</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">10</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">11</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">12</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">13</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">14</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">15</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">16</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">17</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">18</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">19</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">20</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">21</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">22</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">23</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">24</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">25</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">26</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">27</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">28</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">29</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">30</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">31</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">32</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">33</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">34</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">35</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">36</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">37</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">38</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">39</li>
<li style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;">40</li>
</ul>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">这样就通过反射机制实现了一个简单&rsquo;框架&rsquo;的编写</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=1, blogRemark=手写反射框架, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 1734(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-08-24 14:39:46.284 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:39:46.742 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:39:46.746 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:39:46.798 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 14:39:46.807 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:39:46.809 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:39:46.860 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:39:47.017 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:39:47.024 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 364(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:39:47.154 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:42:07.094 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:42:07.096 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:42:07.189 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:42:08.150 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:42:08.152 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:42:08.153 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:42:08.154 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:42:08.198 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:42:08.206 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 14:42:08.208 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:42:08.210 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:42:08.252 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:42:08.256 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:42:08.256 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:42:08.344 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:42:08.400 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:42:08.403 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 304(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:42:08.492 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:42:36.677 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog ( blog_id, blog_title, blog_image, blog_content,blog_type,blog_remark, blog_source ) values ( ?,?,?,?,?,?,? ) 
2020-08-24 14:42:36.679 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1297786368553934848(String), (String), null, null, null, null, null
2020-08-24 14:42:37.649 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:42:37.650 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=, blogImage=null, blogContent=null, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:42:37.739 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:47:04.241 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:47:04.243 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:47:04.332 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:47:04.805 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:47:04.807 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:47:04.899 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:47:05.755 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:47:05.757 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:47:05.803 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:47:05.857 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:47:05.858 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:47:05.946 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:47:06.067 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:47:06.068 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:47:06.112 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:47:06.167 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:47:06.169 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:47:06.257 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:49:51.794 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:49:51.796 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:49:51.885 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:49:52.285 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:49:52.286 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:49:52.329 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:49:52.384 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:49:52.386 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:49:52.474 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:49:52.601 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:49:52.603 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:49:52.698 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:49:53.027 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:49:53.028 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:49:53.071 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:49:53.124 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:49:53.128 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:49:53.217 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:49:56.851 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:49:56.857 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:49:56.920 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 14:49:56.922 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:49:56.923 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:49:56.966 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:49:57.414 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:49:57.416 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 321(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:49:57.503 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:50:08.965 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:50:08.968 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
(String), GET(String), 14(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:50:09.056 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:50:09.587 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:50:09.589 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:50:09.625 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:50:09.627 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:50:09.637 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:50:09.678 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 14:50:09.680 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:50:09.682 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:50:09.696 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:50:09.698 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:50:09.725 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:50:09.792 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:50:09.879 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:50:09.881 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 298(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:50:09.971 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:56:49.873 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:56:49.875 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:56:49.964 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:56:50.432 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:56:50.433 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:56:50.478 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:56:50.548 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:56:50.550 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:56:50.637 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:56:50.770 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:56:50.772 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:56:50.860 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:56:51.211 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:56:51.212 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:56:51.255 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:56:51.305 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:56:51.306 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:56:51.392 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:59:20.663 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:59:20.665 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:59:20.753 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:59:21.158 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:59:21.159 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:59:21.203 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:59:21.261 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:59:21.264 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:59:21.353 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:59:21.491 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:59:21.493 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:59:21.582 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:59:21.831 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 14:59:21.832 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 14:59:21.875 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 14:59:21.936 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:59:21.938 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
(String), GET(String), 102(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:59:22.027 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 14:59:33.084 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 14:59:33.086 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 14:59:33.133 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 14:59:33.135 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 14:59:33.136 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 14:59:33.179 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 14:59:33.324 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 14:59:33.325 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 280(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 14:59:33.414 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:03:42.769 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:03:42.771 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:03:42.859 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:03:43.356 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:03:43.358 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:03:43.387 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 15:03:43.388 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 15:03:43.404 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:03:43.438 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 15:03:43.440 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 15:03:43.442 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 15:03:43.463 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:03:43.466 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:03:43.485 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 15:03:43.559 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:03:43.626 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:03:43.628 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 286(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:03:43.729 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:05:36.919 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:05:36.921 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:05:37.010 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:05:37.596 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:05:37.597 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:05:37.640 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:05:37.697 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:05:37.700 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:05:37.716 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:05:37.717 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:05:37.788 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:05:37.808 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:05:38.150 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:05:38.150 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:05:38.195 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:05:38.263 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:05:38.265 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:05:38.359 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:18:07.978 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:18:07.979 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:18:08.070 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:18:08.741 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:18:08.744 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
(String), GET(String), 3(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:18:08.839 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:18:08.889 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:18:08.890 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:18:08.934 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:18:09.067 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:18:09.069 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 146(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:18:09.160 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:18:09.426 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:18:09.428 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:18:09.472 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:18:09.542 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:18:09.543 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 212(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:18:09.630 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:24:56.754 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:24:56.755 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:24:56.843 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:24:57.318 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:24:57.319 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:24:57.363 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:24:57.452 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:24:57.454 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 142(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:24:57.543 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:24:57.642 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:24:57.644 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:24:57.742 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:24:58.069 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:24:58.070 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:24:58.115 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:24:58.187 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:24:58.188 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:24:58.277 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:33:01.708 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 15:35:14.839 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 15:35:14.903 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 15:35:15.046 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 15:35:15.251 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:35:15.258 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 402(Long), {"code":20000,"data":{"token":"C64A2B7D09F4DF19D99E6FCC83A09440"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:35:15.349 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:35:15.573 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:35:15.576 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:35:15.666 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:35:16.228 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 15:35:16.229 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 15:35:16.274 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 15:35:16.331 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:35:16.333 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:35:16.422 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:35:21.617 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 15:35:21.619 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 15:35:21.679 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 15:35:21.681 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 15:35:21.683 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 15:35:21.738 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 15:35:21.901 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 15:35:21.904 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 383(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 15:35:21.996 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 15:42:35.986 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 15:46:00.270 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 16:02:39.381 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 16:02:39.486 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 16:02:39.587 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 16:02:39.841 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:02:39.849 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 385(Long), {"code":20000,"data":{"token":"2B76A689DB76F3A6E4CF743D9C00F451"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:02:39.943 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:02:40.131 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:02:40.133 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:02:40.226 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:02:41.249 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:02:41.250 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:02:41.296 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:02:41.355 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:02:41.359 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:02:41.451 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:02:41.452 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:02:41.455 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:02:41.516 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:02:41.518 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:02:41.519 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:02:41.575 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:02:41.745 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:02:41.749 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 436(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:02:41.845 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:07:50.714 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:07:50.716 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:07:50.778 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:07:50.780 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:07:50.781 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:07:50.830 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:08:26.286 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:08:26.289 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 323(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:08:26.295 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 16:08:26.298 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 16:08:26.305 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 16:08:26.306 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 16:08:26.345 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 16:08:26.361 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 16:08:26.385 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:08:26.415 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:08:26.419 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 32915(Long), {"code":20000,"data":{"token":"D1B7D4067D7B0BBE099293DECBA9E0E4"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:08:26.431 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:08:26.433 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 20148(Long), {"code":20000,"data":{"token":"4AF7D499A75ED121B13A47D2F0F342C3"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:08:26.511 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:08:26.528 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:09:37.830 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 16:09:37.831 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 16:09:37.880 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 16:09:37.939 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:09:37.941 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 115(Long), {"code":20000,"data":{"token":"FBF3EBEDF78EEB8E80037C0E48C1A259"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:09:38.034 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:09:38.146 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:09:38.149 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:09:38.245 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:09:38.938 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:09:38.940 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:09:38.986 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:09:39.046 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:09:39.048 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:09:39.145 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:09:45.526 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:09:45.533 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:09:45.609 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:09:45.612 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:09:45.613 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:09:45.659 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:09:45.804 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:09:45.807 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 335(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:09:45.901 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:10:21.618 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-08-24 16:10:21.619 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==> Parameters: undefined(String)
2020-08-24 16:10:21.712 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -<==    Updates: 0
2020-08-24 16:10:21.791 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:10:21.793 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 165(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-08-24 16:10:21.887 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:10:22.032 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:10:22.034 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:10:22.084 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:10:22.086 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:10:22.087 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:10:22.133 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:10:22.291 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:10:22.294 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 295(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:10:22.393 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:10:46.371 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-08-24 16:10:46.372 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==> Parameters: undefined(String)
2020-08-24 16:10:46.463 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -<==    Updates: 0
2020-08-24 16:10:46.552 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:10:46.555 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 155(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-08-24 16:10:46.647 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:10:46.808 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:10:46.811 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:10:46.882 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:10:46.887 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:10:46.888 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:10:46.938 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:10:47.095 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:10:47.099 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 352(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:10:47.193 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:34.924 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-08-24 16:11:34.926 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==> Parameters: undefined(String)
2020-08-24 16:11:35.019 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -<==    Updates: 0
2020-08-24 16:11:35.083 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:35.088 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 152(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-08-24 16:11:35.180 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:35.643 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:11:35.646 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:11:35.705 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:11:35.707 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:11:35.709 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:11:35.755 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:11:35.905 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:35.907 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 317(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:11:36.003 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:39.702 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:39.705 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:11:39.799 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:40.197 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:11:40.198 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:11:40.243 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:11:40.246 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:11:40.249 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:11:40.303 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 16:11:40.309 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:11:40.311 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:40.311 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:11:40.313 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 121(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:11:40.360 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:11:40.407 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:40.509 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:40.511 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 326(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:11:40.605 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:54.241 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-08-24 16:11:54.244 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==> Parameters: 1280014508382773248(String)
2020-08-24 16:11:54.340 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -<==    Updates: 1
2020-08-24 16:11:54.406 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:54.407 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/delete/1280014508382773248(String), [1280014508382773248](String), 1(Integer), null, DELETE(String), 160(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-08-24 16:11:54.502 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:54.638 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:11:54.639 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:11:54.688 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 16:11:54.689 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:11:54.690 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:11:54.737 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:11:54.888 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:54.890 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 309(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:11:54.983 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:11:59.990 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:11:59.991 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:12:00.085 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:12:00.672 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:12:00.674 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:12:00.722 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:12:00.748 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:12:00.750 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:12:00.793 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:12:00.795 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:12:00.797 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 16:12:00.799 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:12:00.801 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:12:00.846 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:12:00.889 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:12:00.987 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:12:00.989 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:12:01.083 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:13:57.284 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:13:57.286 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:13:57.377 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:13:57.759 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:13:57.760 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:13:57.807 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:13:57.811 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:13:57.813 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:13:57.875 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 16:13:57.877 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:13:57.878 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:13:57.879 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:13:57.879 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 120(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:13:57.925 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:13:57.970 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:13:58.073 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:13:58.074 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 326(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:13:58.167 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:14:04.208 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-08-24 16:14:04.209 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -==> Parameters: 1297785643283275776(String)
2020-08-24 16:14:04.308 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.deleteById.debug:159 -<==    Updates: 1
2020-08-24 16:14:04.365 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:14:04.367 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/delete/1297785643283275776(String), [1297785643283275776](String), 1(Integer), null, DELETE(String), 156(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-08-24 16:14:04.459 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:14:04.917 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:14:04.918 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:14:04.982 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:14:04.986 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:14:04.988 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:14:05.037 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:14:05.185 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:14:05.186 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 332(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:14:05.281 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:15:54.378 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:15:54.381 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:15:54.434 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:15:54.437 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:15:54.438 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:15:54.484 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:15:54.637 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:15:54.640 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 307(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:15:54.735 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:15:56.858 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:15:56.859 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:15:56.908 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:15:56.910 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:15:56.911 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:15:56.959 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:15:57.133 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:15:57.135 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 350(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:15:57.231 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:17:10.874 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:17:10.878 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:17:10.929 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:17:10.931 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:17:10.932 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:17:10.979 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:17:11.131 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:17:11.133 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 297(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:17:11.227 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:56.414 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:56.416 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:56.509 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:57.043 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:18:57.046 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:18:57.095 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:18:57.097 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:18:57.099 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:18:57.145 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:18:57.289 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:57.291 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 297(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:57.311 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:18:57.312 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:18:57.349 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:57.350 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:57.358 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:18:57.385 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:57.412 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:57.413 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:57.445 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:57.504 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:58.647 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:18:58.648 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:18:58.691 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:18:58.710 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:18:58.712 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:18:58.743 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:58.744 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:58.761 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:18:58.762 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:18:58.763 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:18:58.810 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:18:58.834 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:18:58.958 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:18:58.959 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:18:59.055 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:20:52.454 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:20:52.455 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:20:52.506 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:20:52.513 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:20:52.515 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:20:52.561 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:20:52.712 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:20:52.714 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:20:52.810 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:23:12.777 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:23:12.778 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:23:12.827 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:23:12.829 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:23:12.831 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:23:12.878 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:23:13.029 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:23:13.031 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 302(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:23:13.126 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:26:30.908 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:26:30.909 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:26:30.983 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:26:31.053 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:26:31.054 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:26:31.149 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:26:36.205 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:26:36.208 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:26:36.255 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:26:36.326 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:26:36.328 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:26:36.423 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:27:37.946 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:27:37.947 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:27:37.993 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:27:38.044 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:27:38.046 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:27:38.137 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:27:47.332 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:27:47.333 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:27:47.438 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:27:47.801 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:27:47.802 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:27:47.840 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:27:47.841 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:27:47.848 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:27:47.886 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:27:47.887 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:27:47.888 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:27:47.903 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:27:47.905 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:27:47.931 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:27:47.997 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:27:48.068 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:27:48.069 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 281(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:27:48.160 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:27:49.675 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:27:49.675 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:27:49.720 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:27:49.771 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:27:49.772 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 98(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:27:49.861 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:28:29.222 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:28:29.224 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:28:29.270 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:28:29.322 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:28:29.324 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:28:29.417 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:28:35.632 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:28:35.633 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:28:35.678 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:28:35.747 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:28:35.749 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:28:35.840 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:30:44.121 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:30:44.123 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:30:44.214 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:30:45.187 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:30:45.188 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:30:45.237 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:30:45.240 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:30:45.241 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:30:45.291 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:30:45.292 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:30:45.293 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:30:45.294 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:30:45.293 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:30:45.340 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:30:45.384 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:30:45.483 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:30:45.485 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:30:45.578 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:30:50.613 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:30:50.615 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:30:50.661 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:30:50.715 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:30:50.716 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:30:50.811 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:34:39.832 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:34:39.833 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:34:39.926 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:34:40.683 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:34:40.698 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:34:40.741 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:34:40.742 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:34:40.745 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:34:40.789 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:34:40.791 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:34:40.792 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:34:40.802 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:34:40.803 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 121(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:34:40.838 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:34:40.896 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:34:40.983 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:34:40.984 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:34:41.076 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:34:43.579 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 16:34:43.580 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990077652549632(String)
2020-08-24 16:34:43.624 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 16:34:43.679 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:34:43.680 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990077652549632(String), [1279990077652549632](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客","blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","blogType":1,"createdTime":"2020-07-06 12:06:30","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:34:43.770 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:41:10.500 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:41:10.502 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:41:10.551 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:41:10.553 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:41:10.555 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:41:10.601 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:41:10.743 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:41:10.744 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 298(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:41:10.835 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:46:13.368 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:46:13.370 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:46:13.415 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:46:13.417 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:46:13.418 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:46:13.463 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:46:13.604 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:46:13.605 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 287(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:46:13.696 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:26.761 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:47:26.762 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:47:26.853 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:27.624 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:47:27.625 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:47:27.670 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:47:27.674 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:47:27.675 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:47:27.724 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:47:27.725 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:47:27.726 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:47:27.726 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:47:27.727 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:47:27.773 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:47:27.818 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:27.920 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:47:27.921 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 300(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:47:28.016 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:50.595 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:47:50.596 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:47:50.644 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:47:50.645 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:47:50.647 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:47:50.695 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:47:50.836 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:47:50.837 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 292(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:47:50.929 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:57.081 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 16:47:57.082 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 16:47:57.128 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 16:47:57.217 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:47:57.219 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 124(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:47:57.313 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:47:59.950 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:47:59.953 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:48:00.009 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:48:00.012 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:48:00.014 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:48:00.060 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:48:00.203 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:48:00.204 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 313(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:48:00.298 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:48:11.233 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:48:11.234 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:48:11.328 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:48:11.878 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:48:11.880 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:48:11.926 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:48:11.993 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:48:11.994 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:48:12.088 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:48:12.222 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:48:12.226 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:48:12.278 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:48:12.282 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:48:12.284 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:48:12.334 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:48:12.488 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:48:12.490 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 302(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:48:12.584 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:51:09.767 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') limit ?, ? 
2020-08-24 16:51:09.768 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 博客(String), 0(Integer), 10(Integer)
2020-08-24 16:51:09.818 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 16:51:09.821 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') 
2020-08-24 16:51:09.824 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 博客(String)
2020-08-24 16:51:09.870 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:51:10.017 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:51:10.019 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=博客}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 311(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"}],"pageSize":10,"params":{"blogTitle":"博客"},"sortColumn":"","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:51:10.115 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:51:18.212 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:51:18.213 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:51:18.260 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:51:18.262 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:51:18.263 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:51:18.309 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:51:18.452 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:51:18.454 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31)], params={blogTitle=}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:51:18.550 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:51:26.640 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') limit ?, ? 
2020-08-24 16:51:26.643 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 事务(String), 0(Integer), 10(Integer)
2020-08-24 16:51:26.691 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-08-24 16:51:26.693 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') 
2020-08-24 16:51:26.694 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 事务(String)
2020-08-24 16:51:26.740 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:51:26.901 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:51:26.903 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":"事务"},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:51:26.997 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:51:32.936 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:51:32.938 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:51:32.984 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:51:32.986 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:51:32.988 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:51:33.033 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:51:33.178 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:51:33.180 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 301(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:51:33.272 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:54:07.826 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:54:07.828 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:54:07.877 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:54:07.880 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:54:07.881 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:54:07.926 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:54:08.370 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:54:08.372 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 300(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:54:08.465 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:54:15.303 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? limit ?, ? 
2020-08-24 16:54:15.305 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-08-24 16:54:15.351 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-08-24 16:54:15.352 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-08-24 16:54:15.353 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 1(Integer)
2020-08-24 16:54:15.398 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:54:15.548 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:54:15.550 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 314(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"}],"pageSize":10,"params":{"typeId":1},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:54:15.642 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:54:26.435 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:54:26.439 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:54:26.492 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:54:26.496 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:54:26.501 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:54:26.549 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:54:26.704 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:54:26.706 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 309(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"typeId":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:54:26.797 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:13.417 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:13.419 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:13.511 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:14.529 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:55:14.530 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:55:14.576 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:55:14.583 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:55:14.585 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:55:14.632 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:55:14.633 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:55:14.635 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:55:14.637 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:14.638 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:14.679 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:55:14.732 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:14.823 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:14.824 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:14.915 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:29.780 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:29.783 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:29.875 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:30.693 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:55:30.694 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:55:30.740 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:55:30.748 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:55:30.750 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:55:30.800 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:55:30.802 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:55:30.803 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:30.803 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:55:30.805 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 140(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:30.849 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:55:30.895 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:55:30.999 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:55:31.001 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 322(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:55:31.093 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:56:19.186 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:56:19.188 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:56:19.281 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:56:20.274 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:56:20.275 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:56:20.321 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:56:20.333 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:56:20.335 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:56:20.380 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:56:20.382 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:56:20.382 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:56:20.383 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:56:20.383 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:56:20.427 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:56:20.476 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:56:20.571 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:56:20.573 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 293(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:56:20.665 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:56:57.682 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:56:57.683 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:56:57.731 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:56:57.734 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:56:57.736 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:56:57.783 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:56:57.937 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:56:57.939 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 301(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:56:58.030 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:57:01.791 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:57:01.793 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:57:01.843 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:57:01.848 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:57:01.852 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:57:01.897 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:57:02.048 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:57:02.050 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:57:02.142 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:57:04.634 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? limit ?, ? 
2020-08-24 16:57:04.640 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-08-24 16:57:04.688 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-08-24 16:57:04.695 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-08-24 16:57:04.698 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 1(Integer)
2020-08-24 16:57:04.745 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:57:04.899 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:57:04.901 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 333(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"}],"pageSize":10,"params":{"typeId":1},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:57:04.992 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:57:17.880 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:57:17.882 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:57:17.974 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:57:18.473 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:57:18.474 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:57:18.519 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:57:18.523 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:57:18.524 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:57:18.573 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:57:18.574 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:57:18.576 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:57:18.577 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:57:18.578 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:57:18.621 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:57:18.670 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:57:18.772 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:57:18.775 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 302(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:57:18.869 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:58:16.739 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:58:16.741 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:58:16.836 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:58:17.691 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:58:17.692 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:58:17.737 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:58:17.740 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:58:17.742 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:58:17.788 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:58:17.799 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:58:17.801 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:58:17.807 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:58:17.809 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:58:17.847 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:58:17.902 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:58:17.992 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:58:17.993 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 306(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:58:18.085 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:58:34.028 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:58:34.029 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:58:34.076 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:58:34.078 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:58:34.080 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:58:34.125 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:58:34.267 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:58:34.269 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:58:34.361 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:58:49.263 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') limit ?, ? 
2020-08-24 16:58:49.265 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 博客(String), 0(Integer), 10(Integer)
2020-08-24 16:58:49.310 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 16:58:49.312 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') 
2020-08-24 16:58:49.313 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 博客(String)
2020-08-24 16:58:49.358 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:58:49.517 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:58:49.519 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=博客}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 283(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"}],"pageSize":10,"params":{"blogTitle":"博客"},"sortColumn":"","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:58:49.610 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:59:44.523 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:59:44.524 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:59:44.616 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:59:45.638 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 16:59:45.639 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 16:59:45.685 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 16:59:45.691 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 16:59:45.693 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 16:59:45.738 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:59:45.740 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:59:45.742 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 16:59:45.744 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 16:59:45.745 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 16:59:45.790 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:59:45.834 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:59:45.932 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:59:45.933 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:59:46.027 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 16:59:53.507 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') limit ?, ? 
2020-08-24 16:59:53.508 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 博客(String), 0(Integer), 10(Integer)
2020-08-24 16:59:53.555 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 16:59:53.557 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and blog_title like CONCAT('%', ?, '%') 
2020-08-24 16:59:53.558 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 博客(String)
2020-08-24 16:59:53.603 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 16:59:53.745 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 16:59:53.746 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=博客}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 283(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"}],"pageSize":10,"params":{"blogTitle":"博客"},"sortColumn":"","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 16:59:53.838 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:00:04.567 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:00:04.569 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:00:04.615 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:00:04.617 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:00:04.618 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:00:04.663 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:00:04.806 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:00:04.808 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31)], params={blogTitle=}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:00:04.901 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:00:35.311 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:00:35.312 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:00:35.360 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:00:35.362 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:00:35.363 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:00:35.409 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:00:35.554 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:00:35.556 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 298(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:00:35.650 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:00:36.433 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:00:36.434 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:00:36.481 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:00:36.483 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:00:36.484 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:00:36.531 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:00:36.671 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:00:36.672 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 316(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:00:36.765 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:00:44.352 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? limit ?, ? 
2020-08-24 17:00:44.353 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-08-24 17:00:44.400 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-08-24 17:00:44.406 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-08-24 17:00:44.412 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 1(Integer)
2020-08-24 17:00:44.459 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:00:44.599 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:00:44.600 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 311(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"}],"pageSize":10,"params":{"typeId":1},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:00:44.692 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:00:54.828 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:00:54.836 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:00:54.884 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:00:54.886 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:00:54.887 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:00:54.934 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:00:55.079 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:00:55.081 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"typeId":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:00:55.174 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:18:10.824 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 17:18:54.989 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 17:18:55.227 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 17:18:56.508 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 17:18:58.908 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:18:58.915 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 1710(Long), {"code":20000,"data":{"token":"9FB07B0097C3A316FD966DE0E304BD8D"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:18:59.013 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:19:03.496 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 17:19:03.498 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 17:19:03.545 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 17:19:03.603 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:19:03.606 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 106(Long), {"code":20000,"data":{"token":"9FB07B0097C3A316FD966DE0E304BD8D"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:19:03.700 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:19:03.857 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:19:03.860 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:19:03.953 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:19:04.694 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 17:19:04.697 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 17:19:04.746 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 17:19:04.815 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:19:04.818 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 156(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:19:04.910 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:19:05.033 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:19:05.037 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:19:05.101 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:19:05.104 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:19:05.105 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:19:05.162 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:19:05.325 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:19:05.328 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 501(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:19:05.422 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:23:09.635 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:23:09.637 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:23:09.733 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:23:10.967 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 17:23:10.969 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 17:23:11.006 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:23:11.008 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:23:11.017 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 17:23:11.057 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:23:11.074 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:23:11.077 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:23:11.113 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:23:11.115 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:23:11.160 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:23:11.170 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:23:11.222 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:23:11.226 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:23:11.319 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:25:16.271 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:25:16.273 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:25:16.323 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:25:16.385 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:25:16.387 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:25:16.434 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:25:16.489 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:25:16.491 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:25:16.586 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:25:44.599 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:25:44.601 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:25:44.655 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:25:44.711 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:25:44.712 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:25:44.758 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:25:44.818 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:25:44.820 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:25:44.913 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:26:40.143 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 17:26:40.144 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 17:26:40.198 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 17:26:40.261 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:26:40.263 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:26:40.356 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:26:42.300 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 17:26:42.302 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:26:42.361 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:26:42.364 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 17:26:42.366 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:26:42.412 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:26:42.558 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:26:42.560 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 304(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:26:42.654 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:26:44.406 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:26:44.407 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:26:44.459 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:26:44.529 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:26:44.532 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:26:44.579 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:26:44.635 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:26:44.637 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 236(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:26:44.731 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:13.789 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:13.791 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:13.886 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:14.628 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 17:28:14.629 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 17:28:14.636 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:14.637 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:14.676 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 17:28:14.690 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:14.745 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:14.747 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:14.753 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:14.755 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:14.801 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:14.859 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:14.861 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:14.865 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:14.959 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:19.969 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 17:28:19.971 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 17:28:20.025 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 17:28:20.076 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:20.077 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":{"aboutContent":"就是这样实现的功能","aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","updateTime":"2020-07-14 14:03:35","version":13},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:20.172 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:31.550 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:31.552 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:31.599 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:31.665 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:31.667 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:31.715 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:31.788 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:31.790 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:31.885 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:32.244 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:32.246 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:32.302 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:32.366 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:32.369 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:32.415 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:32.465 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:32.467 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 239(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:32.563 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:33.047 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:33.048 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:33.096 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:33.164 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:33.165 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:33.210 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:33.264 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:33.266 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 219(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:33.360 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:35.078 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:35.079 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:35.129 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:35.201 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:35.203 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:35.251 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:35.305 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:35.306 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 229(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:35.400 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:36.421 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:36.422 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:36.479 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:36.535 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:36.537 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:36.583 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:36.636 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:36.637 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:36.731 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:37.495 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:37.497 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:37.547 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:37.617 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:37.622 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:37.670 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:37.724 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:37.725 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 248(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:37.820 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:38.259 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:38.260 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:38.308 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:38.362 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:38.364 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:38.409 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:38.464 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:38.466 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:38.561 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:38.796 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by update_time asc limit ?, ? 
2020-08-24 17:28:38.798 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:38.848 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:38.919 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:38.921 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:38.967 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:39.022 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:39.023 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 247(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:39.117 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:39.803 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by update_time desc limit ?, ? 
2020-08-24 17:28:39.805 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:39.856 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:39.907 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:39.908 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:39.955 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:40.048 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:40.051 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 211(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:40.145 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:40.263 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:40.265 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:40.313 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:40.374 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:40.376 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:40.422 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:40.473 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:40.474 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:40.569 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:40.602 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:40.603 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:40.651 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:40.701 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:40.703 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:40.751 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:40.819 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:40.821 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:40.914 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:40.940 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:40.941 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:40.990 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:41.044 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:41.045 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:41.091 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:41.150 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:41.151 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:41.231 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:41.232 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:41.245 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:41.278 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:41.331 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:41.332 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:41.378 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:41.435 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:41.437 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 202(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:41.442 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:41.444 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:41.497 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:41.529 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:41.554 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:41.555 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:41.601 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:41.643 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:41.644 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:41.653 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:41.654 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:41.690 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:41.746 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:41.747 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:41.748 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:41.794 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:41.845 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:41.847 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:41.853 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:41.854 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:41.901 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:41.940 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:41.952 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:41.952 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:41.997 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:42.025 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:42.027 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:42.052 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:42.053 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 200(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:42.072 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:42.128 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:42.130 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:42.148 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:42.176 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:42.228 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:42.229 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 205(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:42.321 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:42.510 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:42.511 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:42.558 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:42.610 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:42.611 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:42.657 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:42.701 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-08-24 17:28:42.702 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:42.709 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:42.711 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 202(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:42.749 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:42.803 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:42.803 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:42.804 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:42.849 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:42.858 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-08-24 17:28:42.859 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:42.901 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:42.902 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:42.905 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:42.958 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:42.959 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:42.996 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:43.005 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:43.047 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 17:28:43.048 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 17:28:43.057 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:43.058 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 205(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:43.096 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 17:28:43.149 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 17:28:43.149 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 17:28:43.150 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 17:28:43.195 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 17:28:43.252 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 17:28:43.254 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 205(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 17:28:43.348 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:40:09.504 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 18:40:09.516 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 18:40:09.571 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 18:40:09.699 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:40:09.702 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 351(Long), {"code":20000,"data":{"token":"F195D88662482D4010FE0DFDE9B26584"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:40:09.799 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:40:09.968 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:40:09.970 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:40:10.064 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:40:10.634 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 18:40:10.635 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 18:40:10.733 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 18:40:10.792 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:40:10.795 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 165(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:40:10.891 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:40:40.521 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:40:40.523 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:40:40.571 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:40:40.631 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:40:40.632 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:40:40.678 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:40:40.742 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:40:40.744 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 228(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:40:40.839 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:43:03.663 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:43:03.665 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:43:03.760 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:43:04.512 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 18:43:04.514 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 18:43:04.560 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 18:43:04.590 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:43:04.591 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:43:04.621 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:43:04.623 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:43:04.639 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:43:04.698 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:43:04.699 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:43:04.717 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:43:04.744 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:43:04.811 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:43:04.813 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:43:04.907 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:48:32.001 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 18:48:32.005 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 18:48:32.054 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 18:48:32.120 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:48:32.121 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 161(Long), {"code":20000,"data":{"token":"599647280DD6E161530BFEBDE81B484F"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:48:32.213 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:48:32.335 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:48:32.337 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:48:32.429 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:48:32.715 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 18:48:32.717 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 18:48:32.767 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 18:48:32.866 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:48:32.868 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:48:32.963 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:48:35.732 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:48:35.734 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:48:35.782 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:48:35.841 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:48:35.844 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:48:35.889 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:48:35.951 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:48:35.952 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:48:36.044 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:50:44.653 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.deleteById.debug:159 -==>  Preparing: update bl_about set deleted = 1 where about_id = ? 
2020-08-24 18:50:44.655 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.deleteById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 18:50:44.747 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.deleteById.debug:159 -<==    Updates: 1
2020-08-24 18:50:44.808 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:50:44.809 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/delete/1(String), [1](String), 1(Integer), null, DELETE(String), 354(Long), {"code":20000,"msg":"删除成功！"}(String), 127.0.0.1(String)
2020-08-24 18:50:44.901 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:50:44.998 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:50:44.999 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:50:45.046 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 18:50:45.108 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:50:45.110 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:50:45.161 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:50:45.221 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:50:45.223 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 238(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:50:45.322 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:50:48.003 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 18:50:48.005 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-08-24 18:50:48.053 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 18:50:48.135 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:50:48.136 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/3(String), [3](String), 1(Integer), null, GET(String), 151(Long), {"code":20000,"data":{"aboutContent":"测试的的功能3","aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","updateTime":"2020-07-06 20:39:22","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:50:48.228 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:50:56.391 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version = version+1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-08-24 18:50:56.393 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 关于的功能测试3(String), <p>1111111111</p>(String), 0(Integer), 3(Integer), 1(Integer)
2020-08-24 18:50:56.512 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-08-24 18:50:56.572 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:50:56.573 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/update(String), [About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=<p>1111111111</p>, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=1, deleted=null, enable=null)](String), 1(Integer), null, PUT(String), 212(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 18:50:56.666 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:50:57.073 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:50:57.074 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:50:57.125 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 18:50:57.194 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:50:57.194 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:50:57.241 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:50:57.301 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:50:57.303 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 230(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:50:57.397 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:51:38.182 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title,about_content) values ( ?,? ) 
2020-08-24 18:51:38.183 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 找工作(String), <p>楠楠楠暗暗</p>(String)
2020-08-24 18:51:38.276 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:51:38.337 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:51:38.338 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=找工作, aboutContent=<p>楠楠楠暗暗</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, deleted=null, enable=null)](String), 1(Integer), null, POST(String), 157(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-08-24 18:51:38.431 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:51:38.721 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:51:38.723 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:51:38.772 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:51:38.833 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:51:38.835 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:51:38.881 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:51:38.941 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:51:38.943 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:51:39.038 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:53:40.549 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 18:53:40.550 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-08-24 18:53:40.597 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 18:53:40.659 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:53:40.661 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":{"aboutContent":"测试的的功能2","aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","updateTime":"2020-07-06 20:39:17","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:53:40.754 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:53:48.903 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version = version+1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-08-24 18:53:48.904 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 关于的功能测试2(String), <p>22222222</p>(String), 0(Integer), 2(Integer), 1(Integer)
2020-08-24 18:53:48.999 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-08-24 18:53:49.064 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:53:49.066 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/update(String), [About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=<p>22222222</p>, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=1, deleted=null, enable=null)](String), 1(Integer), null, PUT(String), 158(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 18:53:49.160 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:53:49.556 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:53:49.557 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:53:49.603 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:53:49.667 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:53:49.668 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:53:49.712 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:53:49.774 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:53:49.776 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 18:53:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:53:49.868 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:54:34.854 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 18:54:34.857 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-08-24 18:54:34.904 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 18:54:34.959 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:54:34.960 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/3(String), [3](String), 1(Integer), null, GET(String), 137(Long), {"code":20000,"data":{"aboutContent":"<p>1111111111</p>","aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","updateTime":"2020-08-24 18:50:56","version":2},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:54:35.054 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:54:42.789 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 18:54:42.795 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 18:54:42.852 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 0
2020-08-24 18:54:42.855 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 18:54:42.857 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-08-24 18:54:42.910 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 18:54:42.931 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version = version +1, enable = ? where about_id = ? and version = ? 
2020-08-24 18:54:42.932 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 1(Integer), 2(Integer), 2(Integer)
2020-08-24 18:54:43.023 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-08-24 18:54:43.182 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:54:43.183 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/2(String), [2](String), 1(Integer), null, PUT(String), 506(Long), {"code":20000,"msg":"启用成功！"}(String), 127.0.0.1(String)
2020-08-24 18:54:43.281 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:54:43.682 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 18:54:43.683 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 18:54:43.729 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 18:54:43.786 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 18:54:43.787 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 18:54:43.832 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 18:54:43.925 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:54:43.926 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 18:53:49, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:54:44.020 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:54:47.924 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 18:54:47.927 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 18:54:47.974 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-08-24 18:54:48.279 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:54:48.280 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/3(String), [3](String), 0(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 18:54:48.372 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:54:55.655 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 18:54:55.656 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 18:54:55.701 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-08-24 18:54:55.864 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:54:55.865 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/3(String), [3](String), 0(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:54:55.960 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:55:00.916 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 18:55:00.917 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 18:55:00.963 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-08-24 18:55:01.119 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:55:01.122 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/4(String), [4](String), 0(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-08-24 18:55:01.216 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:59:18.802 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 18:59:18.804 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 5(Integer)
2020-08-24 18:59:18.868 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 18:59:19.006 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:59:19.007 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/5(String), [5](String), 1(Integer), null, GET(String), 220(Long), {"code":20000,"data":{"aboutContent":"<p>楠楠楠暗暗</p>","aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","updateTime":"2020-08-24 18:51:38","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 18:59:19.100 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 18:59:22.321 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 18:59:22.328 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 18:59:22.380 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-08-24 18:59:22.549 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 18:59:22.551 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/5(String), [5](String), 0(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 18:59:22.646 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:07.552 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 19:03:07.554 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:07.607 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:07.698 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 19:03:07.699 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:07.746 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:07.827 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:07.831 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:07.924 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:13.555 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:13.556 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 527(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:14.177 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:15.750 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 19:03:15.753 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:15.759 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 19:03:15.760 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 19:03:15.800 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:15.806 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 19:03:16.376 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 19:03:16.377 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:16.412 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:16.414 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), GET(String), 1131(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:16.433 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:16.508 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:17.183 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:17.185 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), POST(String), 1645(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:17.283 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:22.006 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 19:03:22.011 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-08-24 19:03:22.062 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:03:22.063 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version = version +1, enable = ? where about_id = ? and version = ? 
2020-08-24 19:03:22.064 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 0(Integer), 2(Integer), 3(Integer)
2020-08-24 19:03:22.152 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-08-24 19:03:22.348 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:22.350 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/disEnable/2(String), [2](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), PUT(String), 1014(Long), {"code":20000,"msg":"弃用成功！"}(String), 127.0.0.1(String)
2020-08-24 19:03:22.443 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:22.605 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 19:03:22.606 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:22.689 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:22.823 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 19:03:22.823 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:22.871 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:23.020 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:23.030 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 18:54:43, version=null, deleted=null, enable=1), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 404(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:23.124 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:27.303 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-24 19:03:27.305 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-08-24 19:03:27.350 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 0
2020-08-24 19:03:27.351 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 19:03:27.352 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-08-24 19:03:27.401 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:03:27.428 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version = version +1, enable = ? where about_id = ? and version = ? 
2020-08-24 19:03:27.429 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 1(Integer), 4(Integer), 1(Integer)
2020-08-24 19:03:27.518 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-08-24 19:03:27.707 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:27.716 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/4(String), [4](String), 1(Integer), null, PUT(String), 648(Long), {"code":20000,"msg":"启用成功！"}(String), 127.0.0.1(String)
2020-08-24 19:03:27.808 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:27.947 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 19:03:27.948 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:27.995 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:28.071 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 19:03:28.072 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:28.118 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:28.210 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:28.212 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 19:03:22, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), POST(String), 264(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":1,"updateTime":"2020-08-24 19:03:27"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:28.305 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:33.131 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-08-24 19:03:33.132 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-08-24 19:03:33.206 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:03:33.212 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version = version +1, enable = ? where about_id = ? and version = ? 
2020-08-24 19:03:33.215 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 0(Integer), 4(Integer), 2(Integer)
2020-08-24 19:03:33.304 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-08-24 19:03:33.482 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:33.484 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/disEnable/4(String), [4](String), 1(Integer), null, PUT(String), 516(Long), {"code":20000,"msg":"弃用成功！"}(String), 127.0.0.1(String)
2020-08-24 19:03:33.576 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:33.679 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 19:03:33.680 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:33.727 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:33.788 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 19:03:33.789 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:33.835 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:33.912 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:33.913 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 19:03:22, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-08-24 19:03:27, version=null, deleted=null, enable=1), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-08-24 19:03:33"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:34.009 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:36.740 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:03:36.742 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:03:36.790 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:03:36.875 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:36.876 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:36.970 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:03:38.374 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:03:38.379 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:03:38.445 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:03:38.453 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:03:38.457 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:03:38.510 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:03:38.697 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:03:38.699 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 1378(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:03:38.798 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:04:32.484 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 19:04:32.485 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990229473771520(String)
2020-08-24 19:04:32.540 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:04:32.777 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:04:32.780 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990229473771520(String), [1279990229473771520](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), GET(String), 208(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客22","blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","blogType":2,"createdTime":"2020-07-06 12:07:06","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:04:32.871 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:05:24.819 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:05:24.820 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:05:24.887 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:05:24.889 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:05:24.891 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:05:24.937 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:05:25.089 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:05:25.099 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), POST(String), 421(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:05:25.217 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:06:40.018 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 19:06:40.019 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1297554208815337472(String)
2020-08-24 19:06:40.066 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:06:40.138 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:06:40.140 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1297554208815337472(String), [1297554208815337472](String), 1(Integer), com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
(String), GET(String), 123(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>事务的隔离级别有三种</p>","blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","blogType":4,"createdTime":"2020-08-23 23:20:06","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:06:40.232 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:06:45.416 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 19:06:45.418 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990229473771520(String)
2020-08-24 19:06:45.465 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:06:45.534 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:06:45.535 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990229473771520(String), [1279990229473771520](String), 1(Integer), null, GET(String), 171(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客22","blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","blogType":2,"createdTime":"2020-07-06 12:07:06","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:06:45.627 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:23:57.442 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 19:24:22.793 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 19:24:22.897 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 19:24:22.995 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 19:24:23.232 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:23.241 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 382(Long), {"code":20000,"data":{"token":"88F5465D6BDEBCDB16664785E08BC4F9"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:23.334 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:23.513 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:23.516 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:23.608 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:24.751 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 19:24:24.755 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 19:24:24.803 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 19:24:24.867 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:24.870 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 151(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:24.965 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:25.053 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:24:25.056 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:24:25.117 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:24:25.121 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:24:25.123 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:24:25.171 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:24:25.334 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:25.336 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 533(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:25.430 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:28.638 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:24:28.640 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:24:28.698 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:24:28.759 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:28.761 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:28.854 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:34.486 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:24:34.489 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:24:34.541 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:24:34.544 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:24:34.547 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:24:34.595 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:24:34.737 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:34.740 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 312(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:34.834 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:48.259 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:24:48.260 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:24:48.309 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:24:48.392 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:48.394 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:48.489 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:24:56.500 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:24:56.503 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:24:56.557 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 19:24:56.561 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:24:56.562 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:24:56.609 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:24:56.761 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:24:56.765 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 308(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:24:56.860 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:01.106 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 19:25:01.107 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1297554208815337472(String)
2020-08-24 19:25:01.171 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:25:01.248 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:25:01.251 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1297554208815337472(String), [1297554208815337472](String), 1(Integer), null, GET(String), 126(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>事务的隔离级别有三种</p>","blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","blogType":4,"createdTime":"2020-08-23 23:20:06","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:25:01.346 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:04.929 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-08-24 19:25:04.933 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1279990336076201984(String)
2020-08-24 19:25:04.981 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:25:05.037 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:25:05.040 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1279990336076201984(String), [1279990336076201984](String), 1(Integer), null, GET(String), 129(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"这是休闲博客333","blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","blogType":3,"createdTime":"2020-07-06 12:07:31","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:25:05.135 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:12.893 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog ( blog_id, blog_title, blog_image, blog_content,blog_type,blog_remark, blog_source ) values ( ?,?,?,?,?,?,? ) 
2020-08-24 19:25:12.896 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1297857488296660992(String), 闲言博客3(String), null, 这是休闲博客333(String), 1(Integer), null, null
2020-08-24 19:25:12.986 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:12.988 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where type_id = ? and deleted = 0 
2020-08-24 19:25:12.990 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 19:25:13.036 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-08-24 19:25:13.040 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-08-24 19:25:13.041 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: java(String), 1(Integer), 1(Integer), 1(Integer)
2020-08-24 19:25:13.131 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-08-24 19:25:13.276 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:25:13.277 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=这是休闲博客333, blogGoods=0, blogRead=0, blogCollection=0, blogType=1, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-07-06 12:07:31, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, POST(String), 448(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-08-24 19:25:13.369 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:13.571 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-08-24 19:25:13.578 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 19:25:13.633 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 19:25:13.635 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-08-24 19:25:13.636 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 19:25:13.681 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.BlogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 19:25:13.842 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:25:13.846 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 312(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297857488296660992","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-08-24 19:25:13","typeName":"java","updateTime":"2020-08-24 19:25:13"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:25:13.942 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:25:15.872 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:25:15.875 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:25:15.934 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:25:15.996 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:25:16.000 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 124(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:25:16.117 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:36:43.984 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:36:43.988 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:36:44.082 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:36:44.454 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 19:36:44.456 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 19:36:44.503 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 19:36:44.561 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:36:44.565 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:36:44.659 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:36:44.758 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:36:44.759 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:36:44.810 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:36:44.879 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:36:44.885 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:36:44.978 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:38:03.244 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:38:03.248 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:38:03.344 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:38:03.764 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 19:38:03.765 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 19:38:03.811 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 19:38:03.872 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:38:03.876 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:38:03.969 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:38:04.055 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count,enable from bl_type where deleted = 0 
2020-08-24 19:38:04.056 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 19:38:04.103 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 4
2020-08-24 19:38:04.163 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:38:04.164 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":1,"typeName":"java"},{"enable":0,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:38:04.256 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:38:08.070 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:38:08.071 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:38:08.123 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:38:08.206 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:38:08.208 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:38:08.303 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:40:47.792 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:40:47.793 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:40:47.839 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:40:47.896 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:40:47.898 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:40:47.992 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:42:39.070 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:42:39.071 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:42:39.120 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:42:39.185 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:42:39.188 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:42:39.281 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:43:43.104 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:43:43.106 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:43:43.153 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:43:43.213 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:43:43.215 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 117(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:43:43.310 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:46:25.355 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:46:25.357 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:46:25.406 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:46:25.472 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:46:25.474 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 117(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:46:25.567 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:46:59.674 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:46:59.675 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:46:59.722 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:46:59.785 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:46:59.788 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:46:59.882 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:48:14.085 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:48:14.088 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:48:14.182 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:48:14.430 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 19:48:14.431 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 19:48:14.477 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 19:48:14.535 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:48:14.539 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:48:14.633 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:48:14.699 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:48:14.700 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:48:14.750 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:48:14.817 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:48:14.819 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:48:14.912 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:51:01.707 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 19:51:01.709 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 19:51:01.755 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 19:51:01.809 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:51:01.812 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:51:01.907 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:51:56.267 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.update.debug:159 -==>  Preparing: update bl_admin SET name = ?, signature = ?, comment = ?, username = ? where id = ? 
2020-08-24 19:51:56.269 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.update.debug:159 -==> Parameters: 刘哥(String), 不能再忍了(String), 我是java劝退师(String), admin(String), 1(Integer)
2020-08-24 19:51:56.364 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.update.debug:159 -<==    Updates: 1
2020-08-24 19:51:56.422 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:51:56.425 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=刘哥, header=null, signature=不能再忍了, comment=我是java劝退师, username=admin, password=null)](String), 1(Integer), null, PUT(String), 199(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 19:51:56.518 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 19:52:27.767 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 19:52:27.770 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@f977b5c](String), 0(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 19:52:27.864 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:10:55.238 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:10:55.240 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:10:55.334 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:10:55.910 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 20:10:55.912 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 20:10:55.946 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:10:55.948 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:10:55.960 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 20:10:55.995 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:10:56.022 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:10:56.025 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 186(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:10:56.056 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:10:56.060 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:10:56.117 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:10:56.155 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:10:58.394 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:10:58.395 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:10:58.445 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:10:58.504 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:10:58.505 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:10:58.553 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:10:58.645 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:10:58.647 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 234(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:10:58.740 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:11:55.804 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 20:11:55.813 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 20:11:55.860 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 20:11:55.928 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:11:55.929 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 167(Long), {"code":20000,"data":{"token":"C864BF936A1A6A39E84A2AC0F3FA2141"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:11:56.022 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:11:56.197 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:11:56.199 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:11:56.291 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:11:58.734 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:11:58.735 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:11:58.786 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:11:58.951 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:11:58.957 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), GET(String), 174(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:11:59.063 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:11:59.184 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-08-24 20:11:59.188 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:11:59.269 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 4
2020-08-24 20:11:59.335 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-08-24 20:11:59.336 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:11:59.382 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.AboutMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:11:59.567 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:11:59.569 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 651(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-08-24 19:03:33"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:11:59.694 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:12:02.571 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:12:02.572 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:12:02.641 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:12:02.731 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:12:02.733 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:12:02.778 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:12:02.846 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:12:02.858 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 330(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:12:02.953 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:16:32.715 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:16:32.716 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:16:32.766 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:16:32.904 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:16:32.905 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:16:32.952 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:16:33.025 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:16:33.027 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:16:33.120 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:16:53.025 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:16:53.026 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:16:53.080 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:16:53.142 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:16:53.143 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:16:53.189 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:16:53.249 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:16:53.252 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 269(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:16:53.346 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:17:21.508 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:17:21.509 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:17:21.559 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:17:21.618 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:17:21.619 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:17:21.665 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:17:21.726 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:17:21.728 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:17:21.822 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:18:20.227 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:18:20.229 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:18:20.276 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:18:20.330 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:18:20.331 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:18:20.378 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:18:20.449 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:18:20.451 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:18:20.544 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:18:38.493 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:18:38.494 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:18:38.542 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:18:38.598 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:18:38.599 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:18:38.644 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:18:38.710 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:18:38.713 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:18:38.807 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:19:30.925 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:19:30.926 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:19:30.976 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:19:31.032 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:19:31.033 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:19:31.079 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:19:31.145 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:19:31.147 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:19:31.241 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:20:07.407 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:20:07.409 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:20:07.460 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:20:07.580 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:20:07.581 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:20:07.627 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:20:07.693 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:20:07.695 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:20:07.789 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:42.141 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:42.144 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:42.237 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:42.665 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:23:42.666 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:23:42.712 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:23:42.849 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:42.852 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:42.862 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:42.863 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:42.947 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:42.956 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:23:42.958 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:23:42.964 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:43.014 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:23:43.074 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:23:43.075 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:23:43.122 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:23:43.181 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:43.183 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 233(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:43.280 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:43.580 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:23:43.581 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:23:43.595 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:23:43.596 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:23:43.629 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:23:43.644 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:23:43.721 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:43.731 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:43.741 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:23:43.742 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:23:43.790 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:23:43.828 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:23:43.851 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:23:43.853 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 267(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:23:43.954 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:27:59.303 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:27:59.305 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:27:59.355 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:27:59.443 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:27:59.444 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:27:59.492 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:27:59.560 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:27:59.562 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 407(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:27:59.656 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:28:00.382 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:28:00.384 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:28:00.432 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:28:00.493 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:28:00.494 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:28:00.543 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:28:00.605 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:28:00.607 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:28:00.706 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:28:55.377 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:28:55.379 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:28:55.473 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:28:56.393 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:28:56.394 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:28:56.400 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:28:56.402 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:28:56.451 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:28:56.452 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:28:56.521 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:28:56.523 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), GET(String), 148(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:28:56.528 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:28:56.529 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:28:56.579 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:28:56.617 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:28:56.674 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:28:56.677 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 265(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:28:56.775 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:29:55.457 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 20:29:55.459 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 20:29:55.506 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 20:29:55.570 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:29:55.571 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:29:55.666 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:29:59.943 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:29:59.945 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:30:00.043 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:30:01.064 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:30:01.065 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:30:01.085 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 20:30:01.087 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 20:30:01.113 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:30:01.139 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 20:30:01.184 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:30:01.186 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 140(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:30:01.225 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:30:01.227 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 155(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:30:01.283 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:30:01.322 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:30:06.611 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:30:06.613 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:30:06.661 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:30:06.741 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:30:06.742 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:30:06.788 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:30:06.858 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:30:06.859 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 258(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:30:06.953 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:30:50.319 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:30:50.321 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:30:50.416 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:30:51.301 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:31:06.323 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:31:06.368 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:31:06.633 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:31:06.634 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:31:06.724 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:06.725 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 15178(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:06.743 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:31:06.818 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:31:06.929 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:31:06.929 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:31:06.976 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:31:07.119 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:07.121 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15790(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:07.222 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:31:26.718 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:31:26.720 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:31:26.787 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:31:26.870 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:31:26.872 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:31:26.920 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:31:27.220 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:27.222 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), POST(String), 317(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:27.332 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:31:32.328 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:32.331 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:32.429 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:31:33.480 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:31:33.482 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:31:33.490 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:31:33.492 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:31:33.535 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:31:33.542 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:31:33.598 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:33.600 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 349(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:33.688 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:31:33.696 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:31:33.736 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:31:33.746 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:31:33.853 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:31:33.864 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 558(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:31:33.957 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:32:47.813 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:32:47.814 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:32:47.864 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:32:47.951 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:32:47.952 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:32:47.998 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:32:48.072 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:32:48.074 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 272(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:32:48.168 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:33:50.913 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:33:50.914 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:33:51.008 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:33:52.556 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:33:52.558 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:33:52.605 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:33:52.648 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 20:33:52.648 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 20:33:52.695 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 20:33:52.753 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:33:52.754 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:33:52.817 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:33:52.903 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:33:52.906 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 489(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:33:53.007 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:33:53.038 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:33:53.040 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 550(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:33:53.174 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:08.629 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version, deleted from bl_user where user_id = ? and deleted = 0 
2020-08-24 20:34:08.636 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 20:34:08.683 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-08-24 20:34:08.849 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:08.852 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, GET(String), 172(Long), {"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:34:08.946 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:17.790 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-08-24 20:34:17.791 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.update.debug:159 -==> Parameters: 小少(String), 刘昭源(String), 2(Integer), 小源(String), 1969568111@qq.com(String), 1(Integer), 1(Integer)
2020-08-24 20:34:17.885 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-08-24 20:34:17.948 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:17.950 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)](String), 1(Integer), null, PUT(String), 255(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 20:34:18.045 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:18.379 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:34:18.381 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:34:18.431 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:34:18.518 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:34:18.520 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:34:18.566 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:34:18.637 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:18.638 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), POST(String), 351(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":2,"updateTime":"2020-08-24 20:34:18","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:34:18.731 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:21.547 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version, deleted from bl_user where user_id = ? and deleted = 0 
2020-08-24 20:34:21.549 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 20:34:21.598 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-08-24 20:34:21.669 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:21.671 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":2,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":2},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:34:21.764 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:24.505 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-08-24 20:34:24.506 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.update.debug:159 -==> Parameters: 小少(String), 刘昭源(String), 1(Integer), 小源(String), 1969568111@qq.com(String), 1(Integer), 2(Integer)
2020-08-24 20:34:24.598 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-08-24 20:34:24.654 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:24.655 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)](String), 1(Integer), null, PUT(String), 170(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-24 20:34:24.748 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 20:34:24.999 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 20:34:25.001 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 20:34:25.051 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 20:34:25.179 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 20:34:25.186 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 20:34:25.233 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 20:34:25.483 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 20:34:25.509 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 399(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 20:34:25.603 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:20:29.485 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 21:20:29.533 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 21:20:29.579 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 21:20:29.680 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:20:29.683 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 3020(Long), {"code":20000,"data":{"token":"0B3B798E0FAD75D3C8F974265C31689A"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:20:29.775 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:20:29.953 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:20:29.955 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), GET(String), 17(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:20:30.048 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:20:31.551 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 21:20:31.552 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 21:20:31.599 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 21:20:31.671 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 21:20:31.673 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 21:20:31.725 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 21:20:31.791 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:20:31.792 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 358(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:20:32.628 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:20:32.766 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 21:20:32.768 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 21:20:32.828 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 21:20:32.936 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:20:32.938 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 1554(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:20:33.032 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:20:59.068 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:20:59.084 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:20:59.178 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:21:00.022 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 21:21:00.024 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 21:21:00.028 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 21:21:00.029 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 21:21:00.070 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 21:21:00.076 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 21:21:00.126 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:21:00.127 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 259(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:21:00.137 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 21:21:00.138 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 21:21:00.184 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 21:21:00.226 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:21:00.244 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:21:00.246 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 294(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:21:00.339 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:21:05.427 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-08-24 21:21:05.428 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-24 21:21:05.475 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-24 21:21:05.566 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:21:05.569 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:21:05.660 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:21:07.814 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 21:21:07.815 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 21:21:07.868 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 5
2020-08-24 21:21:07.926 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 21:21:07.927 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 21:21:07.972 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 21:21:08.061 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:21:08.062 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 229(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:21:08.155 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:23:16.813 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-08-24 21:23:16.814 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: test(String), 25f9e794323b453885f5181f1b624d0b(String), test001(String), 2(Integer), null, 小红(String), 1111223554@123.com(String)
2020-08-24 21:23:16.907 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:23:16.973 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:23:16.974 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/save(String), [User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 156(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-08-24 21:23:17.067 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:23:17.233 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 21:23:17.235 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 21:23:17.287 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 21:23:17.380 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 21:23:17.382 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 21:23:17.430 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 21:23:17.523 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:23:17.525 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
(String), POST(String), 270(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:23:17.621 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:23:31.838 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version, deleted from bl_user where user_id = ? and deleted = 0 
2020-08-24 21:23:31.839 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 21:23:31.885 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-08-24 21:23:31.972 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:23:31.974 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:23:32.067 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:25:54.838 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version, deleted from bl_user where user_id = ? and deleted = 0 
2020-08-24 21:25:54.841 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 21:25:54.887 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-08-24 21:25:54.994 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 21:25:54.997 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, GET(String), 169(Long), {"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 21:25:55.093 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 21:52:57.106 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 21:59:20.532 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:00:12.052 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:00:12.135 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:00:12.316 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:00:12.669 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:00:12.676 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 540(Long), {"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:00:12.765 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:00:13.018 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:00:13.029 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:00:13.324 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:00:13.996 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:00:13.998 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:00:14.044 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:00:14.109 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:00:14.113 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:00:14.201 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:00:18.389 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 22:00:18.392 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:00:18.472 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 22:00:18.537 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 22:00:18.539 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:00:18.589 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:00:18.661 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:00:18.663 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 335(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:00:18.761 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:00:25.533 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByIds.debug:159 -==>  Preparing: select user_id,version from bl_user where user_id in ( ? ) and deleted = 0 
2020-08-24 22:00:25.535 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByIds.debug:159 -==> Parameters: 3(Integer)
2020-08-24 22:00:25.579 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByIds.debug:159 -<==      Total: 1
2020-08-24 22:00:25.638 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-08-24 22:00:25.640 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 1(Integer)
2020-08-24 22:00:25.729 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-08-24 22:00:25.786 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:00:25.790 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/resetPwd(String), [[3]](String), 1(Integer), null, PUT(String), 269(Long), {"code":20000,"msg":"重置密码成功！"}(String), 127.0.0.1(String)
2020-08-24 22:00:25.878 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:36.839 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:36.841 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:36.931 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:37.969 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 22:08:37.971 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:08:37.994 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:08:37.995 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:08:38.022 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 22:08:38.042 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:08:38.078 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 22:08:38.079 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:38.100 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:38.103 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:38.125 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:38.180 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:38.183 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 215(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:38.196 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:38.273 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:42.267 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:42.269 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:08:42.323 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:42.373 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:42.374 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:42.419 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:42.481 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:42.485 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 229(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":978,"totalPage":98},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:42.575 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:53.072 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:53.076 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 970(Integer), 10(Integer)
2020-08-24 22:08:53.146 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 9
2020-08-24 22:08:53.199 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:53.200 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:53.245 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:53.297 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:53.302 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=98, pageSize=10, totalPage=98, totalCount=978, index=970, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 254(Long), {"code":20000,"data":{"currentPage":98,"index":970,"list":[{"createdTime":"2020-08-24 22:00:13","logId":975,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"9C388F049956E9512C9DD55D988441D0\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":540,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 22:00:13","logId":976,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 22:00:14","logId":977,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 22:00:19","logId":978,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":335,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 22:00:26","logId":979,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[[3]]","logResult":"{\"code\":20000,\"msg\":\"重置密码成功！\"}","logStatus":1,"logTime":269,"logUrl":"/user/resetPwd"},{"createdTime":"2020-08-24 22:08:37","logId":980,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 22:08:38","logId":981,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 22:08:38","logId":982,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-08-24 22:00:26\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":215,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 22:08:42","logId":983,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-01 15:50:45\",\"logId\":5,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海\\\",\\\"username\\\":\\\"刘小少\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":25,\"logUrl\":\"/admin/getLoginInfo\"},{\"createdTime\":\"2020-07-02 00:54:04\",\"logId\":6,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"7933145F4818150DEDC6D3C12C578219\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":181,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 00:54:28\",\"logId\":7,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海\\\",\\\"username\\\":\\\"刘小少\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":7,\"logUrl\":\"/admin/getLoginInfo\"},{\"createdTime\":\"2020-07-02 00:56:34\",\"logId\":8,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"7933145F4818150DEDC6D3C12C578219\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":17,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 00:59:40\",\"logId\":9,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"61762D7D9FD86197E62B37661ABD197D\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":161,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:07:05\",\"logId\":10,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"61762D7D9FD86197E62B37661ABD197D\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":13,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:10:42\",\"logId\":11,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\\n\\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\\n\\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\\n\\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-07-02 01:14:43\",\"logId\":12,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"1CCEF2D4D4ED2CD805949CE5C776501A\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":194,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:15:06\",\"logId\":13,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.springframework.jdbc.BadSqlGrammarException: \\n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n\\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\\n\\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\\n\\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-07-02 01:17:21\",\"logId\":14,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"E81613503EA0A8AAF58255FD817ED00C\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":203,\"logUrl\":\"/admin/login\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":978,\"totalPage\":98},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":229,"logUrl":"/log/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":979,"totalPage":98},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:53.394 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:55.467 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:55.469 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 960(Integer), 10(Integer)
2020-08-24 22:08:55.523 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:55.582 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:55.583 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:55.628 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:55.698 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:55.702 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=97, pageSize=10, totalPage=98, totalCount=979, index=960, list=[Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=977, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:14), Log(logId=978, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:19), Log(logId=979, logUrl=/user/resetPwd, logParams=[[3]], logStatus=1, logMessage=null, logMethod=PUT, logTime=269, logResult={"code":20000,"msg":"重置密码成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:26), Log(logId=980, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:37), Log(logId=981, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=110, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=982, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=215, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=983, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":978,"totalPage":98},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:42)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":97,"index":960,"list":[{"createdTime":"2020-08-24 21:20:33","logId":965,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1554,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:20:59","logId":966,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 21:21:00","logId":967,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":259,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 21:21:00","logId":968,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":294,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:21:06","logId":969,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":123,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 21:21:08","logId":970,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":229,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:23:17","logId":971,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":156,"logUrl":"/user/save"},{"createdTime":"2020-08-24 21:23:17","logId":972,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":270,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:23:32","logId":973,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":131,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 21:25:55","logId":974,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":169,"logUrl":"/user/get/1"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":980,"totalPage":98},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:55.797 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:55.834 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:55.836 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 950(Integer), 10(Integer)
2020-08-24 22:08:55.894 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:55.947 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:55.948 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:55.995 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:56.063 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:56.070 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=96, pageSize=10, totalPage=98, totalCount=979, index=950, list=[Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=977, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:14), Log(logId=978, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:19), Log(logId=979, logUrl=/user/resetPwd, logParams=[[3]], logStatus=1, logMessage=null, logMethod=PUT, logTime=269, logResult={"code":20000,"msg":"重置密码成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:26), Log(logId=980, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:37), Log(logId=981, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=110, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=982, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=215, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=983, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":978,"totalPage":98},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:42)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":96,"index":950,"list":[{"createdTime":"2020-08-24 20:33:53","logId":955,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":550,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:34:09","logId":956,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":172,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 20:34:18","logId":957,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":1,"logTime":255,"logUrl":"/user/update"},{"createdTime":"2020-08-24 20:34:19","logId":958,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"updateTime\":\"2020-08-24 20:34:18\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":351,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:34:22","logId":959,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":2},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 20:34:25","logId":960,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":1,"logTime":170,"logUrl":"/user/update"},{"createdTime":"2020-08-24 20:34:25","logId":961,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":399,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:20:30","logId":962,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"0B3B798E0FAD75D3C8F974265C31689A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3020,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 21:20:30","logId":963,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 21:20:32","logId":964,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":358,"logUrl":"/type/getList"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":981,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:56.176 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:56.177 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 940(Integer), 10(Integer)
2020-08-24 22:08:56.209 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:56.227 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:56.278 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:56.279 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:56.325 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:56.385 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:56.392 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=95, pageSize=10, totalPage=98, totalCount=979, index=940, list=[Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=977, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:14), Log(logId=978, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:19), Log(logId=979, logUrl=/user/resetPwd, logParams=[[3]], logStatus=1, logMessage=null, logMethod=PUT, logTime=269, logResult={"code":20000,"msg":"重置密码成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:26), Log(logId=980, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:37), Log(logId=981, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=110, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=982, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=215, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=983, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":978,"totalPage":98},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:42)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 202(Long), {"code":20000,"data":{"currentPage":95,"index":940,"list":[{"createdTime":"2020-08-24 20:30:50","logId":945,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:07","logId":946,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15178,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:31:07","logId":947,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15790,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:27","logId":948,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":317,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:32","logId":949,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:34","logId":950,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:31:34","logId":951,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":558,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:32:48","logId":952,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":272,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:33:51","logId":953,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:33:53","logId":954,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":489,"logUrl":"/type/getList"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":982,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:56.478 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:56.479 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 930(Integer), 10(Integer)
2020-08-24 22:08:56.487 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:56.532 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:56.581 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:56.582 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:56.628 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:56.682 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:56.686 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=94, pageSize=10, totalPage=98, totalCount=980, index=930, list=[Log(logId=965, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=1554, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:33), Log(logId=966, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:59), Log(logId=967, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=259, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=968, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=294, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=969, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=123, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:06), Log(logId=970, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:08), Log(logId=971, logUrl=/user/save, logParams=[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=156, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=972, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=270, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=973, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=131, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:32), Log(logId=974, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=169, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:25:55)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":94,"index":930,"list":[{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:55","logId":937,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:28:56","logId":938,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:28:57","logId":939,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":265,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:29:55","logId":940,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:00","logId":941,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:30:01","logId":942,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:30:01","logId":943,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":155,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:07","logId":944,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":258,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":983,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:56.782 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:08:56.855 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:08:56.856 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 930(Integer), 10(Integer)
2020-08-24 22:08:56.906 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:08:56.959 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:08:56.960 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:08:57.005 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:08:57.055 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:08:57.057 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=94, pageSize=10, totalPage=99, totalCount=981, index=930, list=[Log(logId=955, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=550, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:33:53), Log(logId=956, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=172, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:09), Log(logId=957, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=255, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:18), Log(logId=958, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=351, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":2,"updateTime":"2020-08-24 20:34:18","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:19), Log(logId=959, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":2,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":2},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:22), Log(logId=960, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=170, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=961, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=399, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=962, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=3020, logResult={"code":20000,"data":{"token":"0B3B798E0FAD75D3C8F974265C31689A"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=963, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=17, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=964, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=358, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:32)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 206(Long), {"code":20000,"data":{"currentPage":94,"index":930,"list":[{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:55","logId":937,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:28:56","logId":938,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:28:57","logId":939,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":265,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:29:55","logId":940,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:00","logId":941,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:30:01","logId":942,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:30:01","logId":943,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":155,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:07","logId":944,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":258,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":984,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:08:57.153 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:26.979 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:26.980 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 920(Integer), 10(Integer)
2020-08-24 22:09:27.033 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:09:27.085 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:27.087 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:27.132 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:27.194 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:27.198 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=984, index=920, list=[Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01), Log(logId=937, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:55), Log(logId=938, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=148, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:56), Log(logId=939, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=265, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:57), Log(logId=940, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:29:55), Log(logId=941, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:00), Log(logId=942, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=140, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=943, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=155, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=944, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=258, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:07)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:18:20","logId":925,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":216,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:18:39","logId":926,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":210,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":985,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:27.294 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:35.534 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.deleteByIds.debug:159 -==>  Preparing: delete from bl_log where log_id in ( ? , ? ) 
2020-08-24 22:09:35.536 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.deleteByIds.debug:159 -==> Parameters: 925(Integer), 926(Integer)
2020-08-24 22:09:35.628 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.deleteByIds.debug:159 -<==    Updates: 2
2020-08-24 22:09:35.683 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:35.685 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/deleteByIds(String), [[925, 926]](String), 1(Integer), null, PUT(String), 164(Long), {"code":20000,"msg":"批量删除成功！"}(String), 127.0.0.1(String)
2020-08-24 22:09:35.775 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:36.171 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:36.171 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 920(Integer), 10(Integer)
2020-08-24 22:09:36.240 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:09:36.293 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:36.294 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:36.340 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:36.406 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:36.408 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=925, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=216, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:20), Log(logId=926, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=210, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:39), Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 229(Long), {"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":985,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:36.503 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:45.457 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:45.458 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 920(Integer), 10(Integer)
2020-08-24 22:09:45.509 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:09:45.564 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:45.566 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:45.612 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:45.669 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:45.672 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 217(Long), {"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":986,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:45.770 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:49.523 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:49.524 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 920(Integer), 10(Integer)
2020-08-24 22:09:49.572 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:09:49.622 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:49.623 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:49.669 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:49.724 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:49.726 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=986, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":987,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:49.841 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:58.036 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:58.037 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 980(Integer), 10(Integer)
2020-08-24 22:09:58.222 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2020-08-24 22:09:58.273 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:58.274 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:58.318 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:58.393 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:58.401 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=99, pageSize=10, totalPage=99, totalCount=987, index=980, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 350(Long), {"code":20000,"data":{"currentPage":99,"index":980,"list":[{"createdTime":"2020-08-24 22:08:56","logId":987,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=95, pageSize=10, totalPage=98, totalCount=979, index=940, list=[Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={\"code\":20000,\"data\":{\"token\":\"9C388F049956E9512C9DD55D988441D0\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=977, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:14), Log(logId=978, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:19), Log(logId=979, logUrl=/user/resetPwd, logParams=[[3]], logStatus=1, logMessage=null, logMethod=PUT, logTime=269, logResult={\"code\":20000,\"msg\":\"重置密码成功！\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:26), Log(logId=980, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:37), Log(logId=981, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=110, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=982, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=215, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-08-24 22:00:26\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=983, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-01 15:50:45\",\"logId\":5,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海\\\",\\\"username\\\":\\\"刘小少\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":25,\"logUrl\":\"/admin/getLoginInfo\"},{\"createdTime\":\"2020-07-02 00:54:04\",\"logId\":6,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"7933145F4818150DEDC6D3C12C578219\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":181,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 00:54:28\",\"logId\":7,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海\\\",\\\"username\\\":\\\"刘小少\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":7,\"logUrl\":\"/admin/getLoginInfo\"},{\"createdTime\":\"2020-07-02 00:56:34\",\"logId\":8,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"7933145F4818150DEDC6D3C12C578219\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":17,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 00:59:40\",\"logId\":9,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"61762D7D9FD86197E62B37661ABD197D\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":161,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:07:05\",\"logId\":10,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"61762D7D9FD86197E62B37661ABD197D\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":13,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:10:42\",\"logId\":11,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\\n\\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\\n\\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\\n\\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-07-02 01:14:43\",\"logId\":12,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"1CCEF2D4D4ED2CD805949CE5C776501A\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":194,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-07-02 01:15:06\",\"logId\":13,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.springframework.jdbc.BadSqlGrammarException: \\n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n\\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\\n\\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\\n\\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-07-02 01:17:21\",\"logId\":14,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]\",\"logResult\":\"{\\\"code\\\":2000,\\\"data\\\":{\\\"token\\\":\\\"E81613503EA0A8AAF58255FD817ED00C\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":203,\"logUrl\":\"/admin/login\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":978,\"totalPage\":98},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:42)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":95,\"index\":940,\"list\":[{\"createdTime\":\"2020-08-24 20:30:50\",\"logId\":945,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":4,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:31:07\",\"logId\":946,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":15178,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:31:07\",\"logId\":947,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":15790,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:31:27\",\"logId\":948,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":317,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:31:32\",\"logId\":949,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":4,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:31:34\",\"logId\":950,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":349,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:31:34\",\"logId\":951,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":558,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:32:48\",\"logId\":952,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":272,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:33:51\",\"logId\":953,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":14,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:33:53\",\"logId\":954,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":489,\"logUrl\":\"/type/getList\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":982,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":202,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:08:57","logId":988,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=94, pageSize=10, totalPage=98, totalCount=980, index=930, list=[Log(logId=965, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=1554, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:33), Log(logId=966, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:59), Log(logId=967, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=259, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=968, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=294, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=969, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=123, logResult={\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:06), Log(logId=970, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:08), Log(logId=971, logUrl=/user/save, logParams=[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=156, logResult={\"code\":20000,\"msg\":\"添加成功\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=972, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=POST, logTime=270, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=973, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=131, logResult={\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:32), Log(logId=974, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=169, logResult={\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:25:55)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":94,\"index\":930,\"list\":[{\"createdTime\":\"2020-08-24 20:27:59\",\"logId\":935,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":407,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:01\",\"logId\":936,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":224,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:55\",\"logId\":937,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":11,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:28:56\",\"logId\":938,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":148,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:28:57\",\"logId\":939,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":265,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:29:55\",\"logId\":940,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"comment\\\":\\\"我是java劝退师\\\",\\\"id\\\":1,\\\"name\\\":\\\"刘哥\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":130,\"logUrl\":\"/admin/getAdmin\"},{\"createdTime\":\"2020-08-24 20:30:00\",\"logId\":941,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":11,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:30:01\",\"logId\":942,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":140,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:30:01\",\"logId\":943,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"comment\\\":\\\"我是java劝退师\\\",\\\"id\\\":1,\\\"name\\\":\\\"刘哥\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":155,\"logUrl\":\"/admin/getAdmin\"},{\"createdTime\":\"2020-08-24 20:30:07\",\"logId\":944,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":258,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":983,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:08:57","logId":989,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=94, pageSize=10, totalPage=99, totalCount=981, index=930, list=[Log(logId=955, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=550, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:33:53), Log(logId=956, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=172, logResult={\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:09), Log(logId=957, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=255, logResult={\"code\":20000,\"msg\":\"更新成功！\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:18), Log(logId=958, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=POST, logTime=351, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"updateTime\":\"2020-08-24 20:34:18\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:19), Log(logId=959, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":2},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:22), Log(logId=960, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=170, logResult={\"code\":20000,\"msg\":\"更新成功！\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=961, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=399, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=962, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=3020, logResult={\"code\":20000,\"data\":{\"token\":\"0B3B798E0FAD75D3C8F974265C31689A\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=963, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=GET, logTime=17, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=964, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=358, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:32)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":94,\"index\":930,\"list\":[{\"createdTime\":\"2020-08-24 20:27:59\",\"logId\":935,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":407,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:01\",\"logId\":936,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":224,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:55\",\"logId\":937,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":11,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:28:56\",\"logId\":938,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":148,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:28:57\",\"logId\":939,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":265,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:29:55\",\"logId\":940,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"comment\\\":\\\"我是java劝退师\\\",\\\"id\\\":1,\\\"name\\\":\\\"刘哥\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":130,\"logUrl\":\"/admin/getAdmin\"},{\"createdTime\":\"2020-08-24 20:30:00\",\"logId\":941,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":11,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:30:01\",\"logId\":942,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":140,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:30:01\",\"logId\":943,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"comment\\\":\\\"我是java劝退师\\\",\\\"id\\\":1,\\\"name\\\":\\\"刘哥\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":155,\"logUrl\":\"/admin/getAdmin\"},{\"createdTime\":\"2020-08-24 20:30:07\",\"logId\":944,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":258,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":984,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":206,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:09:27","logId":990,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=984, index=920, list=[Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01), Log(logId=937, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:55), Log(logId=938, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=GET, logTime=148, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:56), Log(logId=939, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=265, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:57), Log(logId=940, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:29:55), Log(logId=941, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:00), Log(logId=942, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=140, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=943, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=155, logResult={\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=944, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=258, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:07)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":93,\"index\":920,\"list\":[{\"createdTime\":\"2020-08-24 20:18:20\",\"logId\":925,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":216,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:18:39\",\"logId\":926,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":210,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:19:31\",\"logId\":927,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":223,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:20:08\",\"logId\":928,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":291,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:42\",\"logId\":929,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海!!!\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":9,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":930,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":34,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":931,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":106,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":932,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":933,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":113,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":934,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":267,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":985,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":213,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:09:36","logId":991,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[[925, 926]]","logResult":"{\"code\":20000,\"msg\":\"批量删除成功！\"}","logStatus":1,"logTime":164,"logUrl":"/log/deleteByIds"},{"createdTime":"2020-08-24 22:09:36","logId":992,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=925, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=216, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:20), Log(logId=926, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=210, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:39), Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=POST, logTime=291, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":93,\"index\":920,\"list\":[{\"createdTime\":\"2020-08-24 20:19:31\",\"logId\":927,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":223,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:20:08\",\"logId\":928,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":291,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:42\",\"logId\":929,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海!!!\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":9,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":930,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":34,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":931,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":106,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":932,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":933,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":113,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":934,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":267,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:27:59\",\"logId\":935,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":407,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:01\",\"logId\":936,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":224,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":985,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":229,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:09:46","logId":993,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=POST, logTime=291, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":93,\"index\":920,\"list\":[{\"createdTime\":\"2020-08-24 20:19:31\",\"logId\":927,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":223,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:20:08\",\"logId\":928,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":291,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:42\",\"logId\":929,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海!!!\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":9,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":930,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":34,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":931,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":106,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":932,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":933,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":113,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":934,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":267,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:27:59\",\"logId\":935,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":407,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:01\",\"logId\":936,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":224,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{\"logStatus\":0},\"sortMethod\":\"asc\",\"totalCount\":986,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":217,"logUrl":"/log/getByPage"},{"createdTime":"2020-08-24 22:09:50","logId":994,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=986, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n, logMethod=POST, logTime=291, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":93,\"index\":920,\"list\":[{\"createdTime\":\"2020-08-24 20:19:31\",\"logId\":927,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":223,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:20:08\",\"logId\":928,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\\n\\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\\n\\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\\n\\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\\n\\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":291,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:42\",\"logId\":929,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"一动可搬山，可倒海!!!\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":9,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":930,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘哥\\\",\\\"password\\\":\\\"\\\",\\\"signature\\\":\\\"不能再忍了\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":34,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":931,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":106,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:43\",\"logId\":932,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":933,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":[{\\\"typeBlogCount\\\":1,\\\"typeId\\\":1,\\\"typeName\\\":\\\"java\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":3,\\\"typeName\\\":\\\"前端\\\"},{\\\"typeBlogCount\\\":0,\\\"typeId\\\":4,\\\"typeName\\\":\\\"mysql\\\"}],\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":113,\"logUrl\":\"/type/getList\"},{\"createdTime\":\"2020-08-24 20:23:44\",\"logId\":934,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":267,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:27:59\",\"logId\":935,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":407,\"logUrl\":\"/user/getByPage\"},{\"createdTime\":\"2020-08-24 20:28:01\",\"logId\":936,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"currentPage\\\":1,\\\"index\\\":0,\\\"list\\\":[{\\\"createdTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"name\\\":\\\"刘昭源\\\",\\\"nickname\\\":\\\"小源\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:20:55\\\",\\\"userEmail\\\":\\\"1969568111@qq.com\\\",\\\"userId\\\":1,\\\"username\\\":\\\"小少\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"name\\\":\\\"赵云\\\",\\\"nickname\\\":\\\"小云云\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:21:55\\\",\\\"userEmail\\\":\\\"1234567@qq.com\\\",\\\"userId\\\":2,\\\"username\\\":\\\"小云\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"name\\\":\\\"诸葛亮\\\",\\\"nickname\\\":\\\"小诸葛\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:22:22\\\",\\\"userEmail\\\":\\\"95687122@qq.com\\\",\\\"userId\\\":3,\\\"username\\\":\\\"小诸葛\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"name\\\":\\\"钱多多\\\",\\\"nickname\\\":\\\"没钱\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:23:11\\\",\\\"userEmail\\\":\\\"65866223@qq.com\\\",\\\"userId\\\":4,\\\"username\\\":\\\"小钱\\\"},{\\\"createdTime\\\":\\\"2020-07-06 23:23:53\\\",\\\"name\\\":\\\"张飞\\\",\\\"nickname\\\":\\\"小飞飞\\\",\\\"sex\\\":1,\\\"updateTime\\\":\\\"2020-07-06 23:28:44\\\",\\\"userEmail\\\":\\\"11111111@qq.com\\\",\\\"userId\\\":5,\\\"username\\\":\\\"小飞\\\"}],\\\"pageSize\\\":10,\\\"params\\\":{},\\\"sortMethod\\\":\\\"asc\\\",\\\"totalCount\\\":5,\\\"totalPage\\\":1},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":224,\"logUrl\":\"/user/getByPage\"}],\"pageSize\":10,\"params\":{\"logStatus\":0},\"sortMethod\":\"asc\",\"totalCount\":987,\"totalPage\":99},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/log/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":988,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:59.036 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:59.038 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 960(Integer), 10(Integer)
2020-08-24 22:09:59.099 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:09:59.167 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:09:59.169 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:09:59.213 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:09:59.264 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:09:59.266 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=97, pageSize=10, totalPage=99, totalCount=987, index=960, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 247(Long), {"code":20000,"data":{"currentPage":97,"index":960,"list":[{"createdTime":"2020-08-24 21:21:00","logId":967,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":259,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 21:21:00","logId":968,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":294,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:21:06","logId":969,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":123,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 21:21:08","logId":970,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":229,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:23:17","logId":971,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":156,"logUrl":"/user/save"},{"createdTime":"2020-08-24 21:23:17","logId":972,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"},{\"createdTime\":\"2020-08-24 21:23:17\",\"name\":\"test001\",\"nickname\":\"小红\",\"sex\":2,\"updateTime\":\"2020-08-24 21:23:17\",\"userEmail\":\"1111223554@123.com\",\"userId\":6,\"username\":\"test\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":270,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:23:32","logId":973,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":131,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 21:25:55","logId":974,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":169,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 22:00:13","logId":975,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"9C388F049956E9512C9DD55D988441D0\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":540,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 22:00:13","logId":976,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":988,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:09:59.360 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:59.733 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:09:59.904 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:09:59.906 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 950(Integer), 10(Integer)
2020-08-24 22:09:59.954 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:00.009 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:00.010 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:00.054 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:00.105 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:00.108 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=96, pageSize=10, totalPage=99, totalCount=988, index=950, list=[Log(logId=967, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=259, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=968, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=294, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=969, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=123, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:06), Log(logId=970, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:08), Log(logId=971, logUrl=/user/save, logParams=[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=156, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=972, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=270, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=973, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=131, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:32), Log(logId=974, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=169, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:25:55), Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":96,"index":950,"list":[{"createdTime":"2020-08-24 20:34:18","logId":957,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":1,"logTime":255,"logUrl":"/user/update"},{"createdTime":"2020-08-24 20:34:19","logId":958,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"updateTime\":\"2020-08-24 20:34:18\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":351,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:34:22","logId":959,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":2,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":2},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/user/get/1"},{"createdTime":"2020-08-24 20:34:25","logId":960,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":1,"logTime":170,"logUrl":"/user/update"},{"createdTime":"2020-08-24 20:34:25","logId":961,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":399,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:20:30","logId":962,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"0B3B798E0FAD75D3C8F974265C31689A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3020,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 21:20:30","logId":963,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 21:20:32","logId":964,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":358,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 21:20:33","logId":965,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-08-24 20:34:24\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1554,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 21:20:59","logId":966,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":990,"totalPage":99},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:00.203 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:00.683 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:00.683 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 940(Integer), 10(Integer)
2020-08-24 22:10:00.731 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:00.782 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:00.783 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:00.829 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:00.905 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:00.917 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=95, pageSize=10, totalPage=99, totalCount=988, index=940, list=[Log(logId=987, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=95, pageSize=10, totalPage=98, totalCount=979, index=940, list=[Log(logId=975, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=540, logResult={"code":20000,"data":{"token":"9C388F049956E9512C9DD55D988441D0"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=976, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:13), Log(logId=977, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:14), Log(logId=978, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:19), Log(logId=979, logUrl=/user/resetPwd, logParams=[[3]], logStatus=1, logMessage=null, logMethod=PUT, logTime=269, logResult={"code":20000,"msg":"重置密码成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 22:00:26), Log(logId=980, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:37), Log(logId=981, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=110, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=982, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=215, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:38), Log(logId=983, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":978,"totalPage":98},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:42)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=202, logResult={"code":20000,"data":{"currentPage":95,"index":940,"list":[{"createdTime":"2020-08-24 20:30:50","logId":945,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:07","logId":946,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15178,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:31:07","logId":947,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15790,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:27","logId":948,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":317,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:32","logId":949,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:34","logId":950,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:31:34","logId":951,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":558,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:32:48","logId":952,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":272,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:33:51","logId":953,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:33:53","logId":954,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":489,"logUrl":"/type/getList"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":982,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:56), Log(logId=988, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=94, pageSize=10, totalPage=98, totalCount=980, index=930, list=[Log(logId=965, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=1554, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:33), Log(logId=966, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:59), Log(logId=967, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=259, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=968, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=294, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:00), Log(logId=969, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=123, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:06), Log(logId=970, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:21:08), Log(logId=971, logUrl=/user/save, logParams=[User(userId=null, username=test, password=25f9e794323b453885f5181f1b624d0b, name=test001, sex=2, header=null, nickname=小红, userEmail=1111223554@123.com, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=156, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=972, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:24, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=270, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:17), Log(logId=973, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=131, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:23:32), Log(logId=974, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=169, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":3},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:25:55)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":94,"index":930,"list":[{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:55","logId":937,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:28:56","logId":938,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:28:57","logId":939,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":265,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:29:55","logId":940,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:00","logId":941,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:30:01","logId":942,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:30:01","logId":943,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":155,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:07","logId":944,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":258,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":983,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:57), Log(logId=989, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=94, pageSize=10, totalPage=99, totalCount=981, index=930, list=[Log(logId=955, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=550, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:33:53), Log(logId=956, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=172, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":1,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:09), Log(logId=957, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=255, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:18), Log(logId=958, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=351, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":2,"updateTime":"2020-08-24 20:34:18","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:19), Log(logId=959, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":2,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":2},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:22), Log(logId=960, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=170, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=961, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=399, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=962, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=3020, logResult={"code":20000,"data":{"token":"0B3B798E0FAD75D3C8F974265C31689A"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=963, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=17, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=964, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=358, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:32)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=206, logResult={"code":20000,"data":{"currentPage":94,"index":930,"list":[{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:55","logId":937,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:28:56","logId":938,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:28:57","logId":939,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":265,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:29:55","logId":940,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:00","logId":941,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:30:01","logId":942,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:30:01","logId":943,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":155,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:07","logId":944,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":258,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":984,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:08:57), Log(logId=990, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=984, index=920, list=[Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01), Log(logId=937, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:55), Log(logId=938, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=148, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:56), Log(logId=939, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=265, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:57), Log(logId=940, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=130, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:29:55), Log(logId=941, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:00), Log(logId=942, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=140, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=943, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=155, logResult={"code":20000,"data":{"comment":"我是java劝退师","id":1,"name":"刘哥","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:01), Log(logId=944, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=258, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:30:07)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=213, logResult={"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:18:20","logId":925,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":216,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:18:39","logId":926,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":210,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":985,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:09:27), Log(logId=991, logUrl=/log/deleteByIds, logParams=[[925, 926]], logStatus=1, logMessage=null, logMethod=PUT, logTime=164, logResult={"code":20000,"msg":"批量删除成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 22:09:36), Log(logId=992, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=925, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=216, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:20), Log(logId=926, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=210, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:18:39), Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":985,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:09:36), Log(logId=993, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=985, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=217, logResult={"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":986,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:09:46), Log(logId=994, logUrl=/log/getByPage, logParams=[PageUtils(currentPage=93, pageSize=10, totalPage=99, totalCount=986, index=920, list=[Log(logId=927, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=223, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:19:31), Log(logId=928, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=291, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:20:08), Log(logId=929, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:42), Log(logId=930, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=34, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=931, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=932, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=233, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:43), Log(logId=933, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=934, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=267, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:23:44), Log(logId=935, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=407, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:27:59), Log(logId=936, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:28:01)], params={logStatus=0}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":20000,"data":{"currentPage":93,"index":920,"list":[{"createdTime":"2020-08-24 20:19:31","logId":927,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":223,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:20:08","logId":928,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:42","logId":929,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":930,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":34,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:23:43","logId":931,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:43","logId":932,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":233,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:23:44","logId":933,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:23:44","logId":934,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":267,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:27:59","logId":935,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":407,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:28:01","logId":936,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":987,"totalPage":99},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 22:09:50)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 277(Long), {"code":20000,"data":{"currentPage":95,"index":940,"list":[{"createdTime":"2020-08-24 20:31:07","logId":947,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15790,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:27","logId":948,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":317,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:31:32","logId":949,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:34","logId":950,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:31:34","logId":951,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":558,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:32:48","logId":952,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":272,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:33:51","logId":953,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:33:53","logId":954,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":489,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:33:53","logId":955,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":550,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:34:09","logId":956,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":172,"logUrl":"/user/get/1"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":991,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:01.347 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:01.349 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 930(Integer), 10(Integer)
2020-08-24 22:10:01.475 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:01.529 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:01.531 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:01.582 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:01.635 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:01.638 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=94, pageSize=10, totalPage=99, totalCount=990, index=930, list=[Log(logId=957, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=255, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:18), Log(logId=958, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=351, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":2,"updateTime":"2020-08-24 20:34:18","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:19), Log(logId=959, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":2,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":2},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:22), Log(logId=960, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=170, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=961, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=399, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=962, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=3020, logResult={"code":20000,"data":{"token":"0B3B798E0FAD75D3C8F974265C31689A"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=963, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=17, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=964, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=358, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:32), Log(logId=965, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=1554, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:33), Log(logId=966, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:59)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 461(Long), {"code":20000,"data":{"currentPage":94,"index":930,"list":[{"createdTime":"2020-08-24 20:28:55","logId":937,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:28:56","logId":938,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:28:57","logId":939,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":265,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:29:55","logId":940,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":130,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:00","logId":941,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:30:01","logId":942,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:30:01","logId":943,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"我是java劝退师\",\"id\":1,\"name\":\"刘哥\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":155,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-08-24 20:30:07","logId":944,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":258,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:30:50","logId":945,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:31:07","logId":946,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":15178,"logUrl":"/type/getList"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":991,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:01.732 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:02.008 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:02.009 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 910(Integer), 10(Integer)
2020-08-24 22:10:02.058 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:02.061 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:02.114 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:02.115 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:02.159 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:02.212 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:02.215 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=92, pageSize=10, totalPage=99, totalCount=990, index=910, list=[Log(logId=957, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=1, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=255, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:18), Log(logId=958, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-07-06 23:20:55, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=POST, logTime=351, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":2,"updateTime":"2020-08-24 20:34:18","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:19), Log(logId=959, logUrl=/user/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":{"deleted":0,"name":"刘昭源","nickname":"小源","sex":2,"userEmail":"1969568111@qq.com","userId":1,"username":"小少","version":2},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:22), Log(logId=960, logUrl=/user/update, logParams=[User(userId=1, username=小少, password=null, name=刘昭源, sex=1, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=null, updateTime=null, version=2, deleted=0)], logStatus=1, logMessage=null, logMethod=PUT, logTime=170, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=961, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[User(userId=1, username=小少, password=null, name=刘昭源, sex=2, header=null, nickname=小源, userEmail=1969568111@qq.com, createdTime=2020-07-06 23:20:55, updateTime=2020-08-24 20:34:18, version=null, deleted=null), User(userId=2, username=小云, password=null, name=赵云, sex=1, header=null, nickname=小云云, userEmail=1234567@qq.com, createdTime=2020-07-06 23:21:55, updateTime=2020-07-06 23:21:55, version=null, deleted=null), User(userId=3, username=小诸葛, password=null, name=诸葛亮, sex=1, header=null, nickname=小诸葛, userEmail=95687122@qq.com, createdTime=2020-07-06 23:22:22, updateTime=2020-07-06 23:22:22, version=null, deleted=null), User(userId=4, username=小钱, password=null, name=钱多多, sex=1, header=null, nickname=没钱, userEmail=65866223@qq.com, createdTime=2020-07-06 23:23:11, updateTime=2020-07-06 23:23:11, version=null, deleted=null), User(userId=5, username=小飞, password=null, name=张飞, sex=1, header=null, nickname=小飞飞, userEmail=11111111@qq.com, createdTime=2020-07-06 23:23:53, updateTime=2020-07-06 23:28:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=399, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:34:25), Log(logId=962, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=3020, logResult={"code":20000,"data":{"token":"0B3B798E0FAD75D3C8F974265C31689A"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=963, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=17, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:30), Log(logId=964, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=358, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:32), Log(logId=965, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=1554, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:33), Log(logId=966, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=11, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 21:20:59)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"currentPage":92,"index":910,"list":[{"createdTime":"2020-08-24 20:10:56","logId":915,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":116,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:10:59","logId":916,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":234,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:11:56","logId":917,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"C864BF936A1A6A39E84A2AC0F3FA2141\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":167,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 20:11:56","logId":918,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"不能再忍了\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 20:11:59","logId":919,"logIp":"127.0.0.1","logMessage":"com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数\n\tat com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)\n\tat com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)\n\tat com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":1,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":174,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 20:12:00","logId":920,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-08-24 19:03:22\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-08-24 19:03:33\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":651,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 20:12:03","logId":921,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":330,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:16:33","logId":922,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":303,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:16:53","logId":923,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":269,"logUrl":"/user/getByPage"},{"createdTime":"2020-08-24 20:17:22","logId":924,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-07-06 23:20:55\",\"name\":\"刘昭源\",\"nickname\":\"小源\",\"sex\":1,\"updateTime\":\"2020-07-06 23:20:55\",\"userEmail\":\"1969568111@qq.com\",\"userId\":1,\"username\":\"小少\"},{\"createdTime\":\"2020-07-06 23:21:55\",\"name\":\"赵云\",\"nickname\":\"小云云\",\"sex\":1,\"updateTime\":\"2020-07-06 23:21:55\",\"userEmail\":\"1234567@qq.com\",\"userId\":2,\"username\":\"小云\"},{\"createdTime\":\"2020-07-06 23:22:22\",\"name\":\"诸葛亮\",\"nickname\":\"小诸葛\",\"sex\":1,\"updateTime\":\"2020-07-06 23:22:22\",\"userEmail\":\"95687122@qq.com\",\"userId\":3,\"username\":\"小诸葛\"},{\"createdTime\":\"2020-07-06 23:23:11\",\"name\":\"钱多多\",\"nickname\":\"没钱\",\"sex\":1,\"updateTime\":\"2020-07-06 23:23:11\",\"userEmail\":\"65866223@qq.com\",\"userId\":4,\"username\":\"小钱\"},{\"createdTime\":\"2020-07-06 23:23:53\",\"name\":\"张飞\",\"nickname\":\"小飞飞\",\"sex\":1,\"updateTime\":\"2020-07-06 23:28:44\",\"userEmail\":\"11111111@qq.com\",\"userId\":5,\"username\":\"小飞\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":224,"logUrl":"/user/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":993,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:02.307 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:03.339 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:03.341 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 860(Integer), 10(Integer)
2020-08-24 22:10:03.389 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:03.435 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:03.436 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:03.480 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:03.533 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:03.535 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=87, pageSize=10, totalPage=100, totalCount=993, index=860, list=[Log(logId=915, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=116, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:10:56), Log(logId=916, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=234, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:10:59), Log(logId=917, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=167, logResult={"code":20000,"data":{"token":"C864BF936A1A6A39E84A2AC0F3FA2141"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:56), Log(logId=918, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:56), Log(logId=919, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=174, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:59), Log(logId=920, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=651, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-08-24 19:03:33"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:12:00), Log(logId=921, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=330, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:12:03), Log(logId=922, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=303, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:16:33), Log(logId=923, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=269, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:16:53), Log(logId=924, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:17:22)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 191(Long), {"code":20000,"data":{"currentPage":87,"index":860,"list":[{"createdTime":"2020-08-24 18:59:22","logId":865,"logIp":"127.0.0.1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)\n","logMethod":"PUT","logParams":"[5]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enable/5"},{"createdTime":"2020-08-24 19:03:08","logId":866,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":1,\"updateTime\":\"2020-08-24 18:54:43\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 19:03:14","logId":867,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":527,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 19:03:16","logId":868,"logIp":"127.0.0.1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1131,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 19:03:17","logId":869,"logIp":"127.0.0.1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":1,\"updateTime\":\"2020-08-24 18:54:43\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1645,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 19:03:22","logId":870,"logIp":"127.0.0.1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)\n","logMethod":"PUT","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"弃用成功！\"}","logStatus":1,"logTime":1014,"logUrl":"/about/disEnable/2"},{"createdTime":"2020-08-24 19:03:23","logId":871,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 18:54:43, version=null, deleted=null, enable=1), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-08-24 19:03:22\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":404,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 19:03:28","logId":872,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[4]","logResult":"{\"code\":20000,\"msg\":\"启用成功！\"}","logStatus":1,"logTime":648,"logUrl":"/about/enable/4"},{"createdTime":"2020-08-24 19:03:28","logId":873,"logIp":"127.0.0.1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 19:03:22, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-08-24 19:03:22\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":1,\"updateTime\":\"2020-08-24 19:03:27\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":264,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 19:03:33","logId":874,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[4]","logResult":"{\"code\":20000,\"msg\":\"弃用成功！\"}","logStatus":1,"logTime":516,"logUrl":"/about/disEnable/4"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":994,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:03.631 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:03.924 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:03.925 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 840(Integer), 10(Integer)
2020-08-24 22:10:03.972 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:04.022 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:04.022 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:04.066 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:04.120 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:04.123 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=85, pageSize=10, totalPage=100, totalCount=993, index=840, list=[Log(logId=915, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=116, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:10:56), Log(logId=916, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=234, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:10:59), Log(logId=917, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=167, logResult={"code":20000,"data":{"token":"C864BF936A1A6A39E84A2AC0F3FA2141"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:56), Log(logId=918, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:56), Log(logId=919, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.github.tobato.fastdfs.exception.FdfsServerException: 错误码：22，错误信息：无效的参数
	at com.lzy.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.lzy.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.lzy.blog.controller.UploadController$$FastClassBySpringCGLIB$$a535bd93.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.UploadController$$EnhancerBySpringCGLIB$$e762b86a.uploadImage(<generated>)
, logMethod=GET, logTime=174, logResult={"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:11:59), Log(logId=920, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=651, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-08-24 19:03:33"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:12:00), Log(logId=921, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=330, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:12:03), Log(logId=922, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=303, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:16:33), Log(logId=923, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=269, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:16:53), Log(logId=924, logUrl=/user/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=224, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-07-06 23:20:55","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-07-06 23:22:22","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 20:17:22)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 195(Long), {"code":20000,"data":{"currentPage":85,"index":840,"list":[{"createdTime":"2020-08-24 18:48:32","logId":845,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 18:48:33","logId":846,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":118,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 18:48:36","logId":847,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":225,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 18:50:45","logId":848,"logIp":"127.0.0.1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":354,"logUrl":"/about/delete/1"},{"createdTime":"2020-08-24 18:50:45","logId":849,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":3,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":238,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 18:50:48","logId":850,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"测试的的功能3\",\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"updateTime\":\"2020-07-06 20:39:22\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":151,"logUrl":"/about/get/3"},{"createdTime":"2020-08-24 18:50:56","logId":851,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=<p>1111111111</p>, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=1, deleted=null, enable=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功！\"}","logStatus":1,"logTime":212,"logUrl":"/about/update"},{"createdTime":"2020-08-24 18:50:57","logId":852,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":3,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":230,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 18:51:38","logId":853,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=找工作, aboutContent=<p>楠楠楠暗暗</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, deleted=null, enable=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":157,"logUrl":"/about/save"},{"createdTime":"2020-08-24 18:51:39","logId":854,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-08-24 18:50:56\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":5,\"aboutRead\":0,\"aboutTitle\":\"找工作\",\"createdTime\":\"2020-08-24 18:51:38\",\"enable\":0,\"updateTime\":\"2020-08-24 18:51:38\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":225,"logUrl":"/about/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":995,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:04.219 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:04.265 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:04.266 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 810(Integer), 10(Integer)
2020-08-24 22:10:04.358 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:04.414 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:04.415 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:04.459 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:04.517 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:04.519 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 760(Integer), 10(Integer)
2020-08-24 22:10:04.522 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:04.524 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=82, pageSize=10, totalPage=100, totalCount=994, index=810, list=[Log(logId=865, logUrl=/about/enable/5, logParams=[5], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=PUT, logTime=0, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:59:22), Log(logId=866, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:08), Log(logId=867, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=527, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:14), Log(logId=868, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=GET, logTime=1131, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:16), Log(logId=869, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=POST, logTime=1645, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:17), Log(logId=870, logUrl=/about/disEnable/2, logParams=[2], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=PUT, logTime=1014, logResult={"code":20000,"msg":"弃用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:22), Log(logId=871, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 18:54:43, version=null, deleted=null, enable=1), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=404, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:23), Log(logId=872, logUrl=/about/enable/4, logParams=[4], logStatus=1, logMessage=null, logMethod=PUT, logTime=648, logResult={"code":20000,"msg":"启用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:28), Log(logId=873, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 19:03:22, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=POST, logTime=264, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":1,"updateTime":"2020-08-24 19:03:27"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:28), Log(logId=874, logUrl=/about/disEnable/4, logParams=[4], logStatus=1, logMessage=null, logMethod=PUT, logTime=516, logResult={"code":20000,"msg":"弃用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:33)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 252(Long), {"code":20000,"data":{"currentPage":82,"index":810,"list":[{"createdTime":"2020-08-24 17:28:20","logId":815,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"就是这样实现的功能\",\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"updateTime\":\"2020-07-14 14:03:35\",\"version\":13},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/about/get/1"},{"createdTime":"2020-08-24 17:28:32","logId":816,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":231,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:32","logId":817,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":239,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:33","logId":818,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":219,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:35","logId":819,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":229,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:36","logId":820,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":220,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:38","logId":821,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":248,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:38","logId":822,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":207,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:39","logId":823,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"update_time\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":247,"logUrl":"/about/getByPage"},{"createdTime":"2020-08-24 17:28:40","logId":824,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=desc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":5,\"aboutTitle\":\"修改后的关于\",\"createdTime\":\"2020-07-06 20:38:50\",\"enable\":1,\"updateTime\":\"2020-07-14 14:03:35\"},{\"aboutId\":4,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试4\",\"createdTime\":\"2020-07-06 20:39:27\",\"enable\":0,\"updateTime\":\"2020-07-06 20:48:04\"},{\"aboutId\":3,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试3\",\"createdTime\":\"2020-07-06 20:39:22\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:22\"},{\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"关于的功能测试2\",\"createdTime\":\"2020-07-06 20:39:17\",\"enable\":0,\"updateTime\":\"2020-07-06 20:39:17\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"update_time\",\"sortMethod\":\"desc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":211,"logUrl":"/about/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":996,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:04.566 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:04.628 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:04.629 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:04.644 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:04.674 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:04.691 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:04.693 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 790(Integer), 10(Integer)
2020-08-24 22:10:04.726 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:04.728 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=77, pageSize=10, totalPage=100, totalCount=994, index=760, list=[Log(logId=865, logUrl=/about/enable/5, logParams=[5], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=PUT, logTime=0, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:59:22), Log(logId=866, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:08), Log(logId=867, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=527, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:14), Log(logId=868, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=GET, logTime=1131, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:16), Log(logId=869, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=POST, logTime=1645, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":1,"updateTime":"2020-08-24 18:54:43"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:17), Log(logId=870, logUrl=/about/disEnable/2, logParams=[2], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=PUT, logTime=1014, logResult={"code":20000,"msg":"弃用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:22), Log(logId=871, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 18:54:43, version=null, deleted=null, enable=1), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=404, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:23), Log(logId=872, logUrl=/about/enable/4, logParams=[4], logStatus=1, logMessage=null, logMethod=PUT, logTime=648, logResult={"code":20000,"msg":"启用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:28), Log(logId=873, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-08-24 19:03:22, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=5, aboutTitle=找工作, aboutContent=null, aboutRead=0, createdTime=2020-08-24 18:51:38, updateTime=2020-08-24 18:51:38, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2182b5b6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2e3e944a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$48658e3b.enable(<generated>)
, logMethod=POST, logTime=264, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-08-24 19:03:22"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":1,"updateTime":"2020-08-24 19:03:27"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:28), Log(logId=874, logUrl=/about/disEnable/4, logParams=[4], logStatus=1, logMessage=null, logMethod=PUT, logTime=516, logResult={"code":20000,"msg":"弃用成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 19:03:33)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 217(Long), {"code":20000,"data":{"currentPage":77,"index":760,"list":[{"createdTime":"2020-08-24 16:51:27","logId":765,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"事务\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":303,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:51:33","logId":766,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":301,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:08","logId":767,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":300,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:15","logId":768,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"}],\"pageSize\":10,\"params\":{\"typeId\":1},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":314,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:26","logId":769,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"typeId\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:13","logId":770,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:14","logId":771,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:55:15","logId":772,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:30","logId":773,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:31","logId":774,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":997,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:04.741 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:04.791 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:04.792 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:04.800 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:04.801 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 740(Integer), 10(Integer)
2020-08-24 22:10:04.839 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:04.847 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:04.906 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:04.908 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:04.912 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:04.913 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:04.913 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=80, pageSize=10, totalPage=100, totalCount=995, index=790, list=[Log(logId=845, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:32), Log(logId=846, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=118, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:33), Log(logId=847, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:36), Log(logId=848, logUrl=/about/delete/1, logParams=[1], logStatus=1, logMessage=null, logMethod=DELETE, logTime=354, logResult={"code":20000,"msg":"删除成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=849, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=238, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=850, logUrl=/about/get/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=151, logResult={"code":20000,"data":{"aboutContent":"测试的的功能3","aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","updateTime":"2020-07-06 20:39:22","version":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:48), Log(logId=851, logUrl=/about/update, logParams=[About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=<p>1111111111</p>, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=1, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=PUT, logTime=212, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:56), Log(logId=852, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=230, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:57), Log(logId=853, logUrl=/about/save, logParams=[About(aboutId=null, aboutTitle=找工作, aboutContent=<p>楠楠楠暗暗</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=157, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:38), Log(logId=854, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:39)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":80,"index":790,"list":[{"createdTime":"2020-08-24 17:00:35","logId":795,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":298,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 17:00:36","logId":796,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":316,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 17:00:44","logId":797,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"}],\"pageSize\":10,\"params\":{\"typeId\":1},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":311,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 17:00:55","logId":798,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"typeId\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":303,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 17:18:59","logId":799,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"9FB07B0097C3A316FD966DE0E304BD8D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1710,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 17:19:03","logId":800,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"9FB07B0097C3A316FD966DE0E304BD8D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 17:19:04","logId":801,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":11,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 17:19:05","logId":802,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":156,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 17:19:05","logId":803,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":501,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 17:23:09","logId":804,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":997,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:04.956 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:05.010 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:05.013 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=75, pageSize=10, totalPage=100, totalCount=995, index=740, list=[Log(logId=845, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:32), Log(logId=846, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=118, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:33), Log(logId=847, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:36), Log(logId=848, logUrl=/about/delete/1, logParams=[1], logStatus=1, logMessage=null, logMethod=DELETE, logTime=354, logResult={"code":20000,"msg":"删除成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=849, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=238, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=850, logUrl=/about/get/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=151, logResult={"code":20000,"data":{"aboutContent":"测试的的功能3","aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","updateTime":"2020-07-06 20:39:22","version":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:48), Log(logId=851, logUrl=/about/update, logParams=[About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=<p>1111111111</p>, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=1, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=PUT, logTime=212, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:56), Log(logId=852, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=230, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:57), Log(logId=853, logUrl=/about/save, logParams=[About(aboutId=null, aboutTitle=找工作, aboutContent=<p>楠楠楠暗暗</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=157, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:38), Log(logId=854, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:39)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":75,"index":740,"list":[{"createdTime":"2020-08-24 16:30:45","logId":745,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:30:45","logId":746,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:30:50","logId":747,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1279990077652549632]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"这是休闲博客\",\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"blogType\":1,\"createdTime\":\"2020-07-06 12:06:30\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/blog/get/1279990077652549632"},{"createdTime":"2020-08-24 16:34:40","logId":748,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:34:41","logId":749,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":121,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:34:41","logId":750,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":291,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:34:43","logId":751,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1279990077652549632]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"这是休闲博客\",\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"blogType\":1,\"createdTime\":\"2020-07-06 12:06:30\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/blog/get/1279990077652549632"},{"createdTime":"2020-08-24 16:41:10","logId":752,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":298,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:46:13","logId":753,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":287,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:47:27","logId":754,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":998,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:05.013 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:05.014 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 690(Integer), 10(Integer)
2020-08-24 22:10:05.056 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:05.065 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:05.105 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:05.119 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:05.120 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:05.167 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:05.220 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:05.223 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=70, pageSize=10, totalPage=100, totalCount=995, index=690, list=[Log(logId=845, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:32), Log(logId=846, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=118, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:33), Log(logId=847, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:48:36), Log(logId=848, logUrl=/about/delete/1, logParams=[1], logStatus=1, logMessage=null, logMethod=DELETE, logTime=354, logResult={"code":20000,"msg":"删除成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=849, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=238, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:45), Log(logId=850, logUrl=/about/get/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=151, logResult={"code":20000,"data":{"aboutContent":"测试的的功能3","aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","updateTime":"2020-07-06 20:39:22","version":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:48), Log(logId=851, logUrl=/about/update, logParams=[About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=<p>1111111111</p>, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=1, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=PUT, logTime=212, logResult={"code":20000,"msg":"更新成功！"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:56), Log(logId=852, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=230, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:50:57), Log(logId=853, logUrl=/about/save, logParams=[About(aboutId=null, aboutTitle=找工作, aboutContent=<p>楠楠楠暗暗</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, deleted=null, enable=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=157, logResult={"code":20000,"msg":"添加成功"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:38), Log(logId=854, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-08-24 18:50:56, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=225, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-08-24 18:50:56"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":5,"aboutRead":0,"aboutTitle":"找工作","createdTime":"2020-08-24 18:51:38","enable":0,"updateTime":"2020-08-24 18:51:38"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 18:51:39)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 212(Long), {"code":20000,"data":{"currentPage":70,"index":690,"list":[{"createdTime":"2020-08-24 16:02:40","logId":695,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:02:41","logId":696,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":133,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:02:41","logId":697,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":436,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:08:26","logId":698,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":323,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:08:26","logId":699,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D1B7D4067D7B0BBE099293DECBA9E0E4\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":32915,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 16:08:26","logId":700,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4AF7D499A75ED121B13A47D2F0F342C3\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":20148,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 16:09:38","logId":701,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"FBF3EBEDF78EEB8E80037C0E48C1A259\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/admin/login"},{"createdTime":"2020-08-24 16:09:38","logId":702,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:09:39","logId":703,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:09:46","logId":704,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":335,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1000,"totalPage":100},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:05.278 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:05.279 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 760(Integer), 10(Integer)
2020-08-24 22:10:05.316 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:05.324 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:05.372 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:05.372 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:05.417 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:05.434 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:05.435 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 710(Integer), 10(Integer)
2020-08-24 22:10:05.472 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:05.475 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=77, pageSize=10, totalPage=100, totalCount=996, index=760, list=[Log(logId=815, logUrl=/about/get/1, logParams=[1], logStatus=1, logMessage=null, logMethod=GET, logTime=113, logResult={"code":20000,"data":{"aboutContent":"就是这样实现的功能","aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","updateTime":"2020-07-14 14:03:35","version":13},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:20), Log(logId=816, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=231, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:32), Log(logId=817, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)], logStatus=1, logMessage=null, logMethod=POST, logTime=239, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:32), Log(logId=818, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=219, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:33), Log(logId=819, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=229, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:35), Log(logId=820, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=null, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=220, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:36), Log(logId=821, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=248, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:38), Log(logId=822, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0)], params={}, sortColumn=created_time, sortMethod=desc)], logStatus=1, logMessage=null, logMethod=POST, logTime=207, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:38), Log(logId=823, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=247, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:39), Log(logId=824, logUrl=/about/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[About(aboutId=2, aboutTitle=关于的功能测试2, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:17, updateTime=2020-07-06 20:39:17, version=null, deleted=null, enable=0), About(aboutId=3, aboutTitle=关于的功能测试3, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:22, updateTime=2020-07-06 20:39:22, version=null, deleted=null, enable=0), About(aboutId=4, aboutTitle=关于的功能测试4, aboutContent=null, aboutRead=0, createdTime=2020-07-06 20:39:27, updateTime=2020-07-06 20:48:04, version=null, deleted=null, enable=0), About(aboutId=1, aboutTitle=修改后的关于, aboutContent=null, aboutRead=5, createdTime=2020-07-06 20:38:50, updateTime=2020-07-14 14:03:35, version=null, deleted=null, enable=1)], params={}, sortColumn=update_time, sortMethod=desc)], logStatus=1, logMessage=null, logMethod=POST, logTime=211, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":5,"aboutTitle":"修改后的关于","createdTime":"2020-07-06 20:38:50","enable":1,"updateTime":"2020-07-14 14:03:35"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于的功能测试4","createdTime":"2020-07-06 20:39:27","enable":0,"updateTime":"2020-07-06 20:48:04"},{"aboutId":3,"aboutRead":0,"aboutTitle":"关于的功能测试3","createdTime":"2020-07-06 20:39:22","enable":0,"updateTime":"2020-07-06 20:39:22"},{"aboutId":2,"aboutRead":0,"aboutTitle":"关于的功能测试2","createdTime":"2020-07-06 20:39:17","enable":0,"updateTime":"2020-07-06 20:39:17"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 17:28:40)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 192(Long), {"code":20000,"data":{"currentPage":77,"index":760,"list":[{"createdTime":"2020-08-24 16:51:27","logId":765,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"事务\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":303,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:51:33","logId":766,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":301,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:08","logId":767,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":300,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:15","logId":768,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"}],\"pageSize\":10,\"params\":{\"typeId\":1},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":314,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:26","logId":769,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"typeId\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:13","logId":770,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:14","logId":771,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:55:15","logId":772,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:30","logId":773,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:31","logId":774,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1001,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:05.483 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:05.532 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:05.533 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:05.570 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:05.579 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:05.636 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:05.638 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=72, pageSize=10, totalPage=100, totalCount=997, index=710, list=[Log(logId=765, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=303, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":"事务"},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:51:27), Log(logId=766, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=301, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:51:33), Log(logId=767, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=300, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:08), Log(logId=768, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=314, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"}],"pageSize":10,"params":{"typeId":1},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:15), Log(logId=769, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"typeId":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:26), Log(logId=770, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:13), Log(logId=771, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:14), Log(logId=772, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:15), Log(logId=773, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:30), Log(logId=774, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=140, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:31)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":72,"index":710,"list":[{"createdTime":"2020-08-24 16:11:55","logId":715,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:12:00","logId":716,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:12:01","logId":717,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:12:01","logId":718,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:13:57","logId":719,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:13:58","logId":720,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":120,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:13:58","logId":721,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":326,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:14:04","logId":722,"logIp":"127.0.0.1","logMethod":"DELETE","logParams":"[1297785643283275776]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":156,"logUrl":"/blog/delete/1297785643283275776"},{"createdTime":"2020-08-24 16:14:05","logId":723,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":332,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:15:54","logId":724,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":307,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1002,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:05.733 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:05.860 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:05.861 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 640(Integer), 10(Integer)
2020-08-24 22:10:06.069 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:06.070 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 710(Integer), 10(Integer)
2020-08-24 22:10:06.118 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.175 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:06.176 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:06.220 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:06.245 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:06.246 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 660(Integer), 10(Integer)
2020-08-24 22:10:06.273 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:06.276 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=72, pageSize=10, totalPage=101, totalCount=1001, index=710, list=[Log(logId=765, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=303, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":"事务"},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:51:27), Log(logId=766, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=301, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"blogTitle":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:51:33), Log(logId=767, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=300, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:08), Log(logId=768, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=314, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"}],"pageSize":10,"params":{"typeId":1},"sortColumn":"","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:15), Log(logId=769, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{"typeId":""},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:54:26), Log(logId=770, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:13), Log(logId=771, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:14), Log(logId=772, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:15), Log(logId=773, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:30), Log(logId=774, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=140, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:55:31)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":72,"index":710,"list":[{"createdTime":"2020-08-24 16:11:55","logId":715,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:12:00","logId":716,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:12:01","logId":717,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:12:01","logId":718,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:13:57","logId":719,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:13:58","logId":720,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":120,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:13:58","logId":721,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":326,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:14:04","logId":722,"logIp":"127.0.0.1","logMethod":"DELETE","logParams":"[1297785643283275776]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":156,"logUrl":"/blog/delete/1297785643283275776"},{"createdTime":"2020-08-24 16:14:05","logId":723,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":332,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:15:54","logId":724,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":307,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1003,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:06.294 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.344 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:06.345 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:06.370 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:06.392 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:06.403 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:06.405 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 610(Integer), 10(Integer)
2020-08-24 22:10:06.447 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:06.447 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=67, pageSize=10, totalPage=101, totalCount=1002, index=660, list=[Log(logId=715, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:11:55), Log(logId=716, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:00), Log(logId=717, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=112, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=718, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=719, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:57), Log(logId=720, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=120, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=721, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=326, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=722, logUrl=/blog/delete/1297785643283275776, logParams=[1297785643283275776], logStatus=1, logMessage=null, logMethod=DELETE, logTime=156, logResult={"code":20000,"msg":"删除成功"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:04), Log(logId=723, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=332, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:05), Log(logId=724, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=307, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:15:54)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"currentPage":67,"index":660,"list":[{"createdTime":"2020-08-24 14:50:10","logId":665,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":298,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 14:56:50","logId":666,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:56:50","logId":667,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:56:50","logId":668,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:56:51","logId":669,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:20","logId":670,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:59:21","logId":671,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:21","logId":672,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:59:22","logId":673,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":102,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:33","logId":674,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":280,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1004,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:06.449 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.500 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:06.501 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:06.545 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:06.546 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:06.604 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:06.608 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=62, pageSize=10, totalPage=101, totalCount=1002, index=610, list=[Log(logId=715, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:11:55), Log(logId=716, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:00), Log(logId=717, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=112, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=718, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=719, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:57), Log(logId=720, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=120, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=721, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=326, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=722, logUrl=/blog/delete/1297785643283275776, logParams=[1297785643283275776], logStatus=1, logMessage=null, logMethod=DELETE, logTime=156, logResult={"code":20000,"msg":"删除成功"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:04), Log(logId=723, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=332, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:05), Log(logId=724, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=307, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:15:54)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"currentPage":62,"index":610,"list":[{"createdTime":"2020-08-23 23:16:05","logId":615,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":73,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:19:04","logId":616,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 23:19:04","logId":617,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":59,"logUrl":"/type/getList"},{"createdTime":"2020-08-23 23:19:04","logId":618,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":101,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:20:06","logId":619,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=mysql事务, blogImage=null, blogContent=<p>事务的隔离级别有三种</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=4, blogRemark=11111111, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功！\"}","logStatus":1,"logTime":130,"logUrl":"/blog/save"},{"createdTime":"2020-08-23 23:20:06","logId":620,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30.0, updateTime=2020-07-06 13:52:10.0), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06.0, updateTime=2020-07-06 12:07:06.0), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31.0, updateTime=2020-07-06 12:07:31.0), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34.0, updateTime=2020-07-06 13:52:19.0)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":89,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:26:13","logId":621,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":72,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:30:32","logId":622,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":147,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:31:20","logId":623,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":63,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:31:26","logId":624,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1005,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:06.742 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:06.744 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.754 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:06.755 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 560(Integer), 10(Integer)
2020-08-24 22:10:06.799 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:06.800 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:06.803 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.844 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:06.857 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:06.858 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:06.905 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:06.928 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:06.931 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:06.933 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 510(Integer), 10(Integer)
2020-08-24 22:10:06.938 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=65, pageSize=10, totalPage=100, totalCount=1000, index=640, list=[Log(logId=695, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=9, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:02:40), Log(logId=696, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=133, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:02:41), Log(logId=697, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=436, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:02:41), Log(logId=698, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=323, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:08:26), Log(logId=699, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=32915, logResult={"code":20000,"data":{"token":"D1B7D4067D7B0BBE099293DECBA9E0E4"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:08:26), Log(logId=700, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20148, logResult={"code":20000,"data":{"token":"4AF7D499A75ED121B13A47D2F0F342C3"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:08:26), Log(logId=701, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=115, logResult={"code":20000,"data":{"token":"FBF3EBEDF78EEB8E80037C0E48C1A259"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:09:38), Log(logId=702, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:09:38), Log(logId=703, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=109, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:09:39), Log(logId=704, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=335, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:09:46)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 1037(Long), {"code":20000,"data":{"currentPage":65,"index":640,"list":[{"createdTime":"2020-08-24 14:38:07","logId":645,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:38:08","logId":646,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":124,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:38:12","logId":647,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":310,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 14:39:46","logId":648,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">反射</h1>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a id=\"_1\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>定义</h2>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">通俗的讲，将类的各个组成部分封装为其他对象，这就是反射机制</p>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t2\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t2\"></a><a id=\"_3\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>作用</h2>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\">\t1. 可以在程序运行过程中，操作这些对象。\n\t2. 可以解耦，提高程序的可扩展性。\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n</ul>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t3\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t3\"></a><a id=\"_6\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>原理</h2>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">先来了解下java代码在计算机中运行的几个阶段：<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\" /><img style=\"box-sizing: border-box; outline: none; margin: auto; padding: 0px; border: 0px none; max-width: 100%; overflow-wrap: break-word; display: block; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20200818234212848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JpZ193aGl0ZV9weQ==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\" />对应上面的三个阶段，获取Class对象的方式有下面三种：</p>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background-color: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\">1. Class.forName(\"全类名\")：将字节码文件加载进内存，返回Class对象\n\t* 多用于配置文件，将类名定义在配置文件中。读取文件，加载类\n2. 类名.class：通过类名的属性class获取\n\t* 多用于参数的传递\n3. 对象.getClass()：getClass()方法在Object类中定义着。\n\t* 多用于对象的获取字节码的方式\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">6</li>\n</ul>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">同一个字节码文件(*.class)在一次程序运行过程中，只会被加载一次，不论通过哪一种方式获取的Class对象都是同一个。</p>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t4\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t4\"></a><a id=\"Class_20\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>Class对象功能</h2>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">1.</span> 获取成员变量们\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Field<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getFields</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span> ：获取所有<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span>修饰的成员变量\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Field <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getField</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>String name<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>   获取指定名称的 <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span>修饰的成员变量\n\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Field<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredFields</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  获取所有的成员变量，不考虑修饰符\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Field <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredField</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>String name<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">2.</span> 获取构造方法们\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Constructor<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getConstructors</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Constructor<span class=\"token generics function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">&lt;</span>T<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">&gt;</span></span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getConstructor</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>类<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> parameterTypes<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Constructor<span class=\"token generics function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\"><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">&lt;</span>T<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">&gt;</span></span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredConstructor</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>类<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> parameterTypes<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Constructor<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredConstructors</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">3.</span> 获取成员方法们：\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Method<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getMethods</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Method <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getMethod</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>String name<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">,</span> 类<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> parameterTypes<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Method<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredMethods</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Method <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getDeclaredMethod</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>String name<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">,</span> 类<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&lt;</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">?</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">&gt;</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> parameterTypes<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\n<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">4.</span> 获取全类名\t\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> String <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getName</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">6</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">7</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">8</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">9</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">10</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">11</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">12</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">13</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">14</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">15</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">16</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">17</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">18</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">19</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">20</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">21</li>\n</ul>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t5\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t5\"></a><a id=\"Field_45\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>Field类</h2>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> 操作成员变量：\n\t<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">1.</span> 设置值\n\t\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">void</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">set</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>Object obj<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">,</span> Object value<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\t<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">2.</span> 获取值\n\t\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">get</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>Object obj<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span> \n\n\t<span class=\"token number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">3.</span> 忽略访问权限修饰符的安全检查\n\t\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">setAccessible</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token boolean\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">true</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">:</span>暴力反射\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">6</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">7</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">8</li>\n</ul>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t6\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t6\"></a><a id=\"Constructor_59\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>Constructor类</h2>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> 创建对象（构造方法）：\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> T <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">newInstance</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>Object<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> initargs<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> 如果使用空参数构造方法创建对象，操作可以简化：Class对象的newInstance方法\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n</ul>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t7\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t7\"></a><a id=\"Method_67\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>Method类</h2>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> 执行方法：\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> Object <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">invoke</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>Object obj<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">,</span> Object<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span> args<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span>  \n\n<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> 获取方法名称：\n\t<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">*</span> String getName<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">:</span>获取方法名\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n</ul>\n<h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 24px; color: #4f4f4f; line-height: 32px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t8\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\" name=\"t8\"></a><a id=\"_77\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; background-color: transparent; color: #4ea1db; overflow-wrap: break-word;\"></a>示例</h2>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">利用反射，写一个\"框架\"，不能改变该类的任何代码的前提下，可以帮我们创建任意类的对象，并且执行其中任意方法</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">编写一个学生类</strong></p>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">package</span> cn<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>itcast<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>domain<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">class</span> <span class=\"token class-name\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;\">Student</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">{</span>\n\n\n    <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">void</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">sleep</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">{</span>\n        System<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>out<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">println</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">\"sleep...\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n    <span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">}</span>\n<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">}</span>\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">6</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">7</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">8</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">9</li>\n</ul>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">编写配置文件 pro.properties</strong></p>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\">className<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span>cn<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>itcast<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>domain<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>Student\nmethodName<span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span>sleep\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n</ul>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">编写框架类</strong></p>\n<pre class=\"prettyprint\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px 16px 6px 56px; font-weight: 400; position: relative; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; color: #000000; overflow-wrap: break-word; background-color: #282a36; border: none; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"prism language-java has-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; font-size: 14px; line-height: 22px; color: #f8f8f2; background: #282a36; border-radius: 4px; display: block; overflow-x: auto; white-space: pre; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;\"><span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">package</span> cn<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>itcast<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>reflect<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> cn<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>itcast<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>domain<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>Person<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> cn<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>itcast<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>domain<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>Student<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> java<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>io<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>IOException<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> java<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>io<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>InputStream<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> java<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>lang<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>reflect<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>Method<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">import</span> java<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>util<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span>Properties<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n<span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">/**\n * 框架类\n */</span>\n<span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">class</span> <span class=\"token class-name\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;\">ReflectTest</span> <span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">{</span>\n    <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">public</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">static</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">void</span> <span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">main</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>String<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">[</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">]</span> args<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">throws</span> Exception <span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">{</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//可以创建任意类的对象，可以执行任意方法</span>\n\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//1.加载配置文件</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//1.1创建Properties对象</span>\n        Properties pro <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> <span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">new</span> <span class=\"token class-name\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;\">Properties</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//1.2加载配置文件，转换为一个集合</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//1.2.1获取class目录下的配置文件</span>\n        ClassLoader classLoader <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> ReflectTest<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #ff79c6;\">class</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getClassLoader</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        InputStream is <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> classLoader<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getResourceAsStream</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">\"pro.properties\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        pro<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">load</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>is<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//2.获取配置文件中定义的数据</span>\n        String className <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> pro<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getProperty</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">\"className\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        String methodName <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> pro<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getProperty</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #f1fa8c;\">\"methodName\"</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//3.加载该类进内存</span>\n        Class <span class=\"token class-name\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word;\">cls</span> <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> Class<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">forName</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>className<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//4.创建对象</span>\n        Object obj <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> cls<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">newInstance</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//5.获取方法对象</span>\n        Method method <span class=\"token operator\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">=</span> cls<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">getMethod</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>methodName<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n        <span class=\"token comment\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: italic 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #6272a4;\">//6.执行方法</span>\n        method<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">.</span><span class=\"token function\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #8be9fd;\">invoke</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">(</span>obj<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">)</span><span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">;</span>\n    <span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">}</span>\n<span class=\"token punctuation\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font: 400 14px 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif !important; overflow-wrap: break-word; color: #999999;\">}</span>\n</code></pre>\n<ul class=\"pre-numbering\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px 0px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: #282a36; top: 0px; left: 0px; text-align: right;\">\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">1</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">2</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">3</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">4</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">5</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">6</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">7</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">8</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">9</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">10</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">11</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">12</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">13</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">14</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">15</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">16</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">17</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">18</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">19</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">20</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">21</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">22</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">23</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">24</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">25</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">26</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">27</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">28</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">29</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">30</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">31</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">32</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">33</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">34</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">35</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">36</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">37</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">38</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">39</li>\n<li style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px 8px; font-weight: normal; list-style: none; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: inherit; overflow-wrap: break-word; border-right: 1px solid #c5c5c5; color: #999999;\">40</li>\n</ul>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">这样就通过反射机制实现了一个简单&rsquo;框架&rsquo;的编写</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=1, blogRemark=手写反射框架, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功！\"}","logStatus":1,"logTime":1734,"logUrl":"/blog/save"},{"createdTime":"2020-08-24 14:39:47","logId":649,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":364,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 14:42:07","logId":650,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:42:08","logId":651,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":107,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:42:08","logId":652,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":304,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 14:42:37","logId":653,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=, blogImage=null, blogContent=null, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-08-24 14:47:04","logId":654,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1006,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:06.965 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:06.978 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:06.984 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=57, pageSize=10, totalPage=101, totalCount=1002, index=560, list=[Log(logId=715, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:11:55), Log(logId=716, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:00), Log(logId=717, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=112, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=718, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=719, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:57), Log(logId=720, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=120, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=721, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=326, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=722, logUrl=/blog/delete/1297785643283275776, logParams=[1297785643283275776], logStatus=1, logMessage=null, logMethod=DELETE, logTime=156, logResult={"code":20000,"msg":"删除成功"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:04), Log(logId=723, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=332, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:05), Log(logId=724, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=307, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:15:54)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 218(Long), {"code":20000,"data":{"currentPage":57,"index":560,"list":[{"createdTime":"2020-08-23 21:06:07","logId":565,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":24,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 21:06:08","logId":566,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:06:40","logId":567,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":21,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:06:48","logId":568,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 21:06:49","logId":569,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":43,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:08:50","logId":570,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":55,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:09:05","logId":571,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 21:09:06","logId":572,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":41,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:09:32","logId":573,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 21:09:33","logId":574,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1006,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:07.032 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:07.033 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:07.261 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:07.265 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:07.266 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:07.268 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 660(Integer), 10(Integer)
2020-08-24 22:10:07.477 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:07.479 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=52, pageSize=10, totalPage=101, totalCount=1002, index=510, list=[Log(logId=715, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:11:55), Log(logId=716, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:00), Log(logId=717, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=112, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=718, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=719, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:57), Log(logId=720, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=120, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=721, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=326, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=722, logUrl=/blog/delete/1297785643283275776, logParams=[1297785643283275776], logStatus=1, logMessage=null, logMethod=DELETE, logTime=156, logResult={"code":20000,"msg":"删除成功"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:04), Log(logId=723, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=332, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:05), Log(logId=724, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=307, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:15:54)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 394(Long), {"code":20000,"data":{"currentPage":52,"index":510,"list":[{"createdTime":"2020-08-23 20:11:26","logId":515,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[4]","logResult":"{\"code\":20000,\"msg\":\"已经弃用\"}","logStatus":1,"logTime":51,"logUrl":"/type/disable/4"},{"createdTime":"2020-08-23 20:11:26","logId":516,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 20:17:20","logId":517,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BE0F38E5435E14499F268DBE42E5E492\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":148,"logUrl":"/admin/login"},{"createdTime":"2020-08-23 20:17:21","logId":518,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":10,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 20:17:24","logId":519,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":41,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 20:17:28","logId":520,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[3]","logResult":"{\"code\":20000,\"msg\":\"已经弃用\"}","logStatus":1,"logTime":49,"logUrl":"/type/disable/3"},{"createdTime":"2020-08-23 20:17:28","logId":521,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 20:17:36","logId":522,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[3]","logResult":"{\"code\":20000,\"msg\":\"已经弃用\"}","logStatus":1,"logTime":25,"logUrl":"/type/disable/3"},{"createdTime":"2020-08-23 20:17:36","logId":523,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/listBack"},{"createdTime":"2020-08-23 20:22:30","logId":524,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":21,"logUrl":"/type/listBack"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1006,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:07.484 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:07.593 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:07.594 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:07.757 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:10:07.758 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 610(Integer), 10(Integer)
2020-08-24 22:10:07.809 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:07.810 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:07.849 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:10:07.851 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:07.870 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:07.872 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=67, pageSize=10, totalPage=101, totalCount=1003, index=660, list=[Log(logId=715, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=309, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:11:55), Log(logId=716, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:00), Log(logId=717, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=112, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=718, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=290, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:12:01), Log(logId=719, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:57), Log(logId=720, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=120, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=721, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=326, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:13:58), Log(logId=722, logUrl=/blog/delete/1297785643283275776, logParams=[1297785643283275776], logStatus=1, logMessage=null, logMethod=DELETE, logTime=156, logResult={"code":20000,"msg":"删除成功"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:04), Log(logId=723, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=332, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:14:05), Log(logId=724, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=307, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 16:15:54)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 754(Long), {"code":20000,"data":{"currentPage":67,"index":660,"list":[{"createdTime":"2020-08-24 14:50:10","logId":665,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":298,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 14:56:50","logId":666,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:56:50","logId":667,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:56:50","logId":668,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:56:51","logId":669,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:20","logId":670,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":4,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:59:21","logId":671,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:21","logId":672,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 14:59:22","logId":673,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":102,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 14:59:33","logId":674,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":280,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1007,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:07.903 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:10:07.904 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:10:07.950 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:10:07.968 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:08.009 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:08.011 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=62, pageSize=10, totalPage=101, totalCount=1004, index=610, list=[Log(logId=665, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=298, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:50:10), Log(logId=666, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:56:50), Log(logId=667, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:56:50), Log(logId=668, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:56:50), Log(logId=669, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=111, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:56:51), Log(logId=670, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=4, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:59:20), Log(logId=671, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=106, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:59:21), Log(logId=672, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:59:21), Log(logId=673, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
; Column 'blog_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a5df67a9.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$3524c603.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd18ce5.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_content' cannot be null
, logMethod=GET, logTime=102, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:59:22), Log(logId=674, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=280, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30","typeName":"java","updateTime":"2020-07-06 13:52:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06","typeName":"linux","updateTime":"2020-07-06 12:07:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31","typeName":"前端","updateTime":"2020-07-06 12:07:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34","typeName":"前端","updateTime":"2020-07-06 13:52:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06","typeName":"mysql","updateTime":"2020-08-23 23:20:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297785643283275776","blogRead":0,"blogRemark":"手写反射框架","blogTitle":"java反射--框架设计的灵魂","createdTime":"2020-08-24 14:39:45","typeName":"java","updateTime":"2020-08-24 14:39:45"}],"pageSize":10,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-24 14:59:33)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 370(Long), {"code":20000,"data":{"currentPage":62,"index":610,"list":[{"createdTime":"2020-08-23 23:16:05","logId":615,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":73,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:19:04","logId":616,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-23 23:19:04","logId":617,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":59,"logUrl":"/type/getList"},{"createdTime":"2020-08-23 23:19:04","logId":618,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":101,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:20:06","logId":619,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=mysql事务, blogImage=null, blogContent=<p>事务的隔离级别有三种</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=4, blogRemark=11111111, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功！\"}","logStatus":1,"logTime":130,"logUrl":"/blog/save"},{"createdTime":"2020-08-23 23:20:06","logId":620,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30.0, updateTime=2020-07-06 13:52:10.0), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06.0, updateTime=2020-07-06 12:07:06.0), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31.0, updateTime=2020-07-06 12:07:31.0), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34.0, updateTime=2020-07-06 13:52:19.0)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":89,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:26:13","logId":621,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":72,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:30:32","logId":622,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":147,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:31:20","logId":623,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30.0\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06.0\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1280014508382773248\",\"blogRead\":1,\"blogTitle\":\"闲言博客4\",\"createdTime\":\"2020-07-06 13:43:34.0\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 13:52:19.0\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06.0\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06.0\"}],\"pageSize\":20,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":63,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-23 23:31:26","logId":624,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1009,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:08.109 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:26.311 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:26.312 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=62, pageSize=10, totalPage=101, totalCount=1009, index=610, list=[Log(logId=615, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=73, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:16:05), Log(logId=616, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=617, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=59, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=618, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=101, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=619, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=mysql事务, blogImage=null, blogContent=<p>事务的隔离级别有三种</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=4, blogRemark=11111111, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=130, logResult={"code":20000,"msg":"添加成功！"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=620, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30.0, updateTime=2020-07-06 13:52:10.0), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06.0, updateTime=2020-07-06 12:07:06.0), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31.0, updateTime=2020-07-06 12:07:31.0), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34.0, updateTime=2020-07-06 13:52:19.0)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=89, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=621, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=72, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:26:13), Log(logId=622, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=147, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:30:32), Log(logId=623, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=63, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:20), Log(logId=624, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:26)], params={logStatus=, logUrl=/admin/info}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:49)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$517528cb.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":77,"index":760,"list":[{"createdTime":"2020-08-24 16:51:27","logId":765,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=事务}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"事务\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":303,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:51:33","logId":766,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={blogTitle=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"blogTitle\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":301,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:08","logId":767,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":300,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:15","logId":768,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06)], params={typeId=1}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"}],\"pageSize\":10,\"params\":{\"typeId\":1},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":314,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:54:26","logId":769,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=1, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10)], params={typeId=}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{\"typeId\":\"\"},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:13","logId":770,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:14","logId":771,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:55:15","logId":772,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:55:30","logId":773,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:55:31","logId":774,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":140,"logUrl":"/type/getList"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1001,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:26.409 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:27.259 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:27.261 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=62, pageSize=10, totalPage=101, totalCount=1009, index=610, list=[Log(logId=615, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=73, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:16:05), Log(logId=616, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=617, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=59, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=618, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=101, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=619, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=mysql事务, blogImage=null, blogContent=<p>事务的隔离级别有三种</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=4, blogRemark=11111111, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=130, logResult={"code":20000,"msg":"添加成功！"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=620, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30.0, updateTime=2020-07-06 13:52:10.0), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06.0, updateTime=2020-07-06 12:07:06.0), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31.0, updateTime=2020-07-06 12:07:31.0), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34.0, updateTime=2020-07-06 13:52:19.0)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=89, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=621, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=72, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:26:13), Log(logId=622, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=147, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:30:32), Log(logId=623, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=63, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:20), Log(logId=624, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:26)], params={logStatus=, logUrl=/admin/info}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:49)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$517528cb.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":72,"index":710,"list":[{"createdTime":"2020-08-24 16:11:55","logId":715,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:12:00","logId":716,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:12:01","logId":717,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:12:01","logId":718,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:13:57","logId":719,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:13:58","logId":720,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":120,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:13:58","logId":721,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":326,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:14:04","logId":722,"logIp":"127.0.0.1","logMethod":"DELETE","logParams":"[1297785643283275776]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":156,"logUrl":"/blog/delete/1297785643283275776"},{"createdTime":"2020-08-24 16:14:05","logId":723,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":332,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:15:54","logId":724,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":307,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1002,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:27.358 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:10:34.434 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:10:34.438 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=62, pageSize=10, totalPage=101, totalCount=1009, index=610, list=[Log(logId=615, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=73, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:16:05), Log(logId=616, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=6, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=617, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=59, logResult={"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=618, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=101, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:19:04), Log(logId=619, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=mysql事务, blogImage=null, blogContent=<p>事务的隔离级别有三种</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=4, blogRemark=11111111, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=130, logResult={"code":20000,"msg":"添加成功！"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=620, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=1, totalCount=4, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30.0, updateTime=2020-07-06 13:52:10.0), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06.0, updateTime=2020-07-06 12:07:06.0), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31.0, updateTime=2020-07-06 12:07:31.0), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34.0, updateTime=2020-07-06 13:52:19.0)], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=89, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:20:06), Log(logId=621, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=72, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:26:13), Log(logId=622, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=147, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:30:32), Log(logId=623, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=20, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)], logStatus=1, logMessage=null, logMethod=POST, logTime=63, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990077652549632","blogRead":1,"blogTitle":"修改后侧测试博客","createdTime":"2020-07-06 12:06:30.0","typeName":"java","updateTime":"2020-07-06 13:52:10.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990229473771520","blogRead":0,"blogTitle":"闲言博客2","createdTime":"2020-07-06 12:07:06.0","typeName":"linux","updateTime":"2020-07-06 12:07:06.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1279990336076201984","blogRead":0,"blogTitle":"闲言博客3","createdTime":"2020-07-06 12:07:31.0","typeName":"前端","updateTime":"2020-07-06 12:07:31.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1280014508382773248","blogRead":1,"blogTitle":"闲言博客4","createdTime":"2020-07-06 13:43:34.0","typeName":"前端","updateTime":"2020-07-06 13:52:19.0"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1297554208815337472","blogRead":0,"blogRemark":"11111111","blogTitle":"mysql事务","createdTime":"2020-08-23 23:20:06.0","typeName":"mysql","updateTime":"2020-08-23 23:20:06.0"}],"pageSize":20,"params":{},"sortColumn":"","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:20), Log(logId=624, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=5, logResult={"code":20000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海!!!","username":"admin"},"msg":"操作成功!"}, logIp=127.0.0.1, createdTime=2020-08-23 23:31:26)], params={logStatus=, logUrl=/admin/info}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:49)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$517528cb.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logUrl' in 'class com.lzy.blog.utils.PageUtils'
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":72,"index":710,"list":[{"createdTime":"2020-08-24 16:11:55","logId":715,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1280014508382773248, blogTitle=闲言博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 13:43:34, updateTime=2020-07-06 13:52:19), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":309,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:12:00","logId":716,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":6,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:12:01","logId":717,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:12:01","logId":718,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":290,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:13:57","logId":719,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海!!!\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/admin/info"},{"createdTime":"2020-08-24 16:13:58","logId":720,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},{\"typeBlogCount\":0,\"typeId\":4,\"typeName\":\"mysql\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":120,"logUrl":"/type/getList"},{"createdTime":"2020-08-24 16:13:58","logId":721,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297785643283275776\",\"blogRead\":0,\"blogRemark\":\"手写反射框架\",\"blogTitle\":\"java反射--框架设计的灵魂\",\"createdTime\":\"2020-08-24 14:39:45\",\"typeName\":\"java\",\"updateTime\":\"2020-08-24 14:39:45\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":5,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":326,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:14:04","logId":722,"logIp":"127.0.0.1","logMethod":"DELETE","logParams":"[1297785643283275776]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":156,"logUrl":"/blog/delete/1297785643283275776"},{"createdTime":"2020-08-24 16:14:05","logId":723,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=5, index=0, list=[BlogVo(blogId=1279990077652549632, blogTitle=修改后侧测试博客, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:06:30, updateTime=2020-07-06 13:52:10), BlogVo(blogId=1279990229473771520, blogTitle=闲言博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:06, updateTime=2020-07-06 12:07:06), BlogVo(blogId=1279990336076201984, blogTitle=闲言博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-07-06 12:07:31, updateTime=2020-07-06 12:07:31), BlogVo(blogId=1297554208815337472, blogTitle=mysql事务, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=11111111, blogComment=0, blogMonth=null, createdTime=2020-08-23 23:20:06, updateTime=2020-08-23 23:20:06), BlogVo(blogId=1297785643283275776, blogTitle=java反射--框架设计的灵魂, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=手写反射框架, blogComment=0, blogMonth=null, createdTime=2020-08-24 14:39:45, updateTime=2020-08-24 14:39:45)], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":332,"logUrl":"/blog/getByPage"},{"createdTime":"2020-08-24 16:15:54","logId":724,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990077652549632\",\"blogRead\":1,\"blogTitle\":\"修改后侧测试博客\",\"createdTime\":\"2020-07-06 12:06:30\",\"typeName\":\"java\",\"updateTime\":\"2020-07-06 13:52:10\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990229473771520\",\"blogRead\":0,\"blogTitle\":\"闲言博客2\",\"createdTime\":\"2020-07-06 12:07:06\",\"typeName\":\"linux\",\"updateTime\":\"2020-07-06 12:07:06\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1279990336076201984\",\"blogRead\":0,\"blogTitle\":\"闲言博客3\",\"createdTime\":\"2020-07-06 12:07:31\",\"typeName\":\"前端\",\"updateTime\":\"2020-07-06 12:07:31\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1297554208815337472\",\"blogRead\":0,\"blogRemark\":\"11111111\",\"blogTitle\":\"mysql事务\",\"createdTime\":\"2020-08-23 23:20:06\",\"typeName\":\"mysql\",\"updateTime\":\"2020-08-23 23:20:06\"}],\"pageSize\":10,\"params\":{},\"sortColumn\":\"\",\"sortMethod\":\"asc\",\"totalCount\":4,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":307,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1003,"totalPage":101},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:10:34.537 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:12:58.645 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:13:32.191 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:13:32.242 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:13:32.339 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:13:32.523 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:13:32.529 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 281(Long), {"code":20000,"data":{"token":"FAB328AD2A78F4F054673C8621A45123"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:13:32.620 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:13:32.803 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:13:32.805 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:13:32.896 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:13:33.397 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:13:33.398 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:13:33.445 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:13:33.493 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:13:33.494 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:13:33.504 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:13:33.507 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:13:33.565 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:13:33.602 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:13:33.626 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:13:33.628 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:13:33.678 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:13:33.765 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:13:33.768 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 304(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1017,"totalPage":102},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:13:33.872 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:13:42.377 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:13:42.380 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=102, totalCount=1017, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logStatus' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:49)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$c5a050ec.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'logStatus' in 'class com.lzy.blog.utils.PageUtils'
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-08-24 22:13:42.480 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:15:42.384 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:16:14.083 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:16:14.128 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:16:14.223 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:16:14.396 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:14.401 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 259(Long), {"code":20000,"data":{"token":"C1BFA7A1FAADA4AB7BAACD3F9B469159"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:14.490 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:14.656 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:14.658 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:14.759 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:15.528 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:16:15.530 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:16:15.579 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:16:15.617 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:16:15.618 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:16:15.645 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:15.649 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 126(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:15.686 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:16:15.739 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:15.743 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:16:15.745 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:16:15.794 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:16:15.875 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:15.880 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 305(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1022,"totalPage":103},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:15.975 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:20.204 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_url = ? limit ?, ? 
2020-08-24 22:16:20.206 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2020-08-24 22:16:20.263 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:16:20.338 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_url = ? 
2020-08-24 22:16:20.340 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 0(Integer)
2020-08-24 22:16:20.387 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:16:20.443 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:20.449 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=103, totalCount=1022, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 271(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1023,"totalPage":103},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:20.545 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:27.708 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_url = ? limit ?, ? 
2020-08-24 22:16:27.709 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2020-08-24 22:16:27.767 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:16:27.823 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_url = ? 
2020-08-24 22:16:27.824 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 0(Integer)
2020-08-24 22:16:27.875 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:16:27.940 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:27.945 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=103, totalCount=1023, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1024,"totalPage":103},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:28.055 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:16:34.991 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_url = ? and log_url = ? limit ?, ? 
2020-08-24 22:16:34.992 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), GET(String), 0(Integer), 10(Integer)
2020-08-24 22:16:35.038 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 0
2020-08-24 22:16:35.090 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_url = ? and log_url = ? 
2020-08-24 22:16:35.092 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String), GET(String)
2020-08-24 22:16:35.139 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:16:35.194 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:16:35.196 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=103, totalCount=1024, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:16:35.290 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:20:51.688 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:21:21.691 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:21:21.740 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:21:21.836 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:21:22.023 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:22.028 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 288(Long), {"code":20000,"data":{"token":"4A90274EA2BC730C6506373F9135ECA8"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:22.123 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:22.299 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:22.302 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:22.400 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:23.225 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:21:23.227 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:21:23.275 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:21:23.300 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:21:23.302 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:21:23.338 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:23.340 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:23.366 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:23.418 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:21:23.419 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:21:23.436 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:23.466 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:23.539 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:23.542 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 273(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1029,"totalPage":103},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:23.633 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:27.837 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:21:27.838 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2020-08-24 22:21:27.894 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:27.972 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:21:27.974 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 0(Integer)
2020-08-24 22:21:28.017 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:28.072 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:28.078 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=103, totalCount=1029, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":60,"totalPage":6},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:28.171 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:31.899 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2020-08-24 22:21:31.901 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), PUT(String), 0(Integer), 10(Integer)
2020-08-24 22:21:31.953 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:32.011 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2020-08-24 22:21:32.013 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 0(Integer), PUT(String)
2020-08-24 22:21:32.056 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:32.134 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:32.144 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=6, totalCount=60, index=0, list=[Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=18, logUrl=/type/save, logParams=[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 该分类已经存在！
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:47), Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=67, logUrl=/blog/save, logParams=[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:04:36), Log(logId=73, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:13:59), Log(logId=76, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:15:49), Log(logId=77, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:17:05), Log(logId=79, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:25:50), Log(logId=81, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:29:07)], params={logStatus=0, logMethod=PUT}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 218(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 20:49:22","logId":115,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:57:41","logId":119,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:59:05","logId":121,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:04:32","logId":125,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:09:21","logId":130,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":2000,\"msg\":\"弃用成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 23:06:25","logId":148,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"674353A23477FFC9CFDA83950F5B398E\"},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:07:05","logId":149,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:10:50","logId":150,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:11:17","logId":151,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"PUT"},"sortMethod":"asc","totalCount":14,"totalPage":2},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:32.237 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:36.228 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2020-08-24 22:21:36.230 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), PUT(String), 0(Integer), 10(Integer)
2020-08-24 22:21:36.281 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:36.334 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2020-08-24 22:21:36.336 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String), PUT(String)
2020-08-24 22:21:36.381 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:36.435 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:36.443 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=2, totalCount=14, index=0, list=[Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=115, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:49:22), Log(logId=119, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:57:41), Log(logId=121, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:59:05), Log(logId=125, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:04:32), Log(logId=130, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"弃用成功！"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:09:21), Log(logId=148, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"data":{"token":"674353A23477FFC9CFDA83950F5B398E"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:06:25), Log(logId=149, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:07:05), Log(logId=150, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:10:50), Log(logId=151, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:11:17)], params={logStatus=, logMethod=PUT}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 206(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 20:49:22","logId":115,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:57:41","logId":119,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:59:05","logId":121,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:04:32","logId":125,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:09:21","logId":130,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":2000,\"msg\":\"弃用成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 23:06:25","logId":148,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"674353A23477FFC9CFDA83950F5B398E\"},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:07:05","logId":149,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:10:50","logId":150,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:11:17","logId":151,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"}],"pageSize":10,"params":{"logStatus":"","logMethod":"PUT"},"sortMethod":"asc","totalCount":14,"totalPage":2},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:36.546 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:42.227 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2020-08-24 22:21:42.228 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), PUT(String), 0(Integer), 10(Integer)
2020-08-24 22:21:42.276 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:42.325 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2020-08-24 22:21:42.326 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String), PUT(String)
2020-08-24 22:21:42.369 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:42.420 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:42.423 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=2, totalCount=14, index=0, list=[Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=115, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:49:22), Log(logId=119, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:57:41), Log(logId=121, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:59:05), Log(logId=125, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:04:32), Log(logId=130, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"弃用成功！"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:09:21), Log(logId=148, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"data":{"token":"674353A23477FFC9CFDA83950F5B398E"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:06:25), Log(logId=149, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:07:05), Log(logId=150, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:10:50), Log(logId=151, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:11:17)], params={logStatus=, logMethod=PUT}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 194(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 20:49:22","logId":115,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:57:41","logId":119,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 20:59:05","logId":121,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:04:32","logId":125,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 21:09:21","logId":130,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 当前已经存在关于我的\n\tat com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)\n\tat com.lzy.blog.controller.AboutController.enable(AboutController.java:89)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":2000,\"msg\":\"弃用成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enable/1"},{"createdTime":"2020-07-06 23:06:25","logId":148,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"674353A23477FFC9CFDA83950F5B398E\"},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:07:05","logId":149,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:10:50","logId":150,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"},{"createdTime":"2020-07-06 23:11:17","logId":151,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.update(MusicController.java:46)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'\n","logMethod":"PUT","logParams":"[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":0,"logTime":0,"logUrl":"/music/update"}],"pageSize":10,"params":{"logStatus":"","logMethod":"PUT"},"sortMethod":"asc","totalCount":14,"totalPage":2},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:42.521 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:48.741 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2020-08-24 22:21:48.743 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), GET(String), 0(Integer), 10(Integer)
2020-08-24 22:21:48.790 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 3
2020-08-24 22:21:48.840 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2020-08-24 22:21:48.844 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String), GET(String)
2020-08-24 22:21:48.888 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:48.943 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:48.945 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=2, totalCount=14, index=0, list=[Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=115, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:49:22), Log(logId=119, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:93)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1afb42bb.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$27b7214f.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$1f04b771.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:57:41), Log(logId=121, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
### The error may involve com.lzy.blog.mapper.AboutMapper.updateEnable-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:99)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac7e4fb6.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b93a2e4a.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$be63b4ad.enable(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enable = 1
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:59:05), Log(logId=125, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:04:32), Log(logId=130, logUrl=/about/enable/1, logParams=[1], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 当前已经存在关于我的
	at com.lzy.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:95)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5473a5b1.enableById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$612f8445.enableById(<generated>)
	at com.lzy.blog.controller.AboutController.enable(AboutController.java:89)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6b7766.enable(<generated>)
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"弃用成功！"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 21:09:21), Log(logId=148, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"data":{"token":"674353A23477FFC9CFDA83950F5B398E"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:06:25), Log(logId=149, logUrl=/music/update, logParams=[Music(id=1, name=null, artist=小周, url=null, cover=null, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:07:05), Log(logId=150, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:10:50), Log(logId=151, logUrl=/music/update, logParams=[Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
	at com.lzy.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.update(MusicController.java:46)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$a7e38d5f.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enabled' in 'class com.lzy.blog.pojo.Music'
, logMethod=PUT, logTime=0, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 23:11:17)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 206(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 20:54:08","logId":116,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.getById(AboutServiceImpl.java:57)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.getById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.getById(<generated>)\n\tat com.lzy.blog.controller.AboutController.get(AboutController.java:57)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.get(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"GET","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/get/1"},{"createdTime":"2020-07-06 20:54:40","logId":117,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n\tat com.lzy.blog.service.impl.AboutServiceImpl.getById(AboutServiceImpl.java:57)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.getById(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)\n\tat com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.getById(<generated>)\n\tat com.lzy.blog.controller.AboutController.get(AboutController.java:57)\n\tat com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.get(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about\n","logMethod":"GET","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/get/1"},{"createdTime":"2020-07-14 00:30:31","logId":321,"logIp":"127.0.0.1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'\n\tat com.lzy.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:77)\n\tat com.lzy.blog.controller.MusicController.getList(MusicController.java:122)\n\tat com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$62c6a1f9.getList(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/music/getList"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:49.035 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:21:57.415 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:21:57.417 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2020-08-24 22:21:57.492 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:21:57.544 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:21:57.545 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String)
2020-08-24 22:21:57.589 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:21:57.648 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:21:57.652 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=3, index=0, list=[Log(logId=116, logUrl=/about/get/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.getById(AboutServiceImpl.java:57)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.getById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.getById(<generated>)
	at com.lzy.blog.controller.AboutController.get(AboutController.java:57)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.get(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=GET, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:54:08), Log(logId=117, logUrl=/about/get/1, logParams=[1], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
	at com.lzy.blog.service.impl.AboutServiceImpl.getById(AboutServiceImpl.java:57)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4816e8d7.getById(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$42df0c41.invoke(<generated>)
	at com.lzy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$54d2c76b.getById(<generated>)
	at com.lzy.blog.controller.AboutController.get(AboutController.java:57)
	at com.lzy.blog.controller.AboutController$$FastClassBySpringCGLIB$$221edf33.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$989bed.get(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from bl_about
, logMethod=GET, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 20:54:40), Log(logId=321, logUrl=/music/getList, logParams=[], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.lzy.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:77)
	at com.lzy.blog.controller.MusicController.getList(MusicController.java:122)
	at com.lzy.blog.controller.MusicController$$FastClassBySpringCGLIB$$96664bcb.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.MusicController$$EnhancerBySpringCGLIB$$62c6a1f9.getList(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-07-14 00:30:31)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 248(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":60,"totalPage":6},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:21:57.745 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:22:04.055 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:22:04.057 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-08-24 22:22:04.124 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:22:04.174 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:22:04.175 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 1(Integer)
2020-08-24 22:22:04.218 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:22:04.269 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:22:04.272 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=6, totalCount=60, index=0, list=[Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=18, logUrl=/type/save, logParams=[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 该分类已经存在！
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:47), Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=67, logUrl=/blog/save, logParams=[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:04:36), Log(logId=73, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:13:59), Log(logId=76, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:15:49), Log(logId=77, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:17:05), Log(logId=79, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:25:50), Log(logId=81, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:29:07)], params={logStatus=1, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:17:40","logId":15,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":2000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":113,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"}],"pageSize":10,"params":{"logStatus":1,"logMethod":""},"sortMethod":"asc","totalCount":976,"totalPage":98},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:22:04.364 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:22:11.939 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:22:11.941 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2020-08-24 22:22:11.988 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:22:12.042 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:22:12.044 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String)
2020-08-24 22:22:12.087 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:22:12.142 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:22:12.144 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=98, totalCount=976, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21), Log(logId=15, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=1, logMessage=null, logMethod=POST, logTime=113, logResult={"code":2000,"msg":"添加成功"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:40), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":60,"totalPage":6},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:22:12.236 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:23:14.345 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:24:09.560 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:24:09.612 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:24:09.725 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:24:09.963 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:09.971 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 313(Long), {"code":20000,"data":{"token":"4DF5D21C52465B4AD6C8FC2AEF1A4581"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:10.069 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:10.300 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:10.302 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:10.395 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:11.141 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:24:11.142 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:24:11.196 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:24:11.221 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:24:11.223 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:24:11.272 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:11.274 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:11.289 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:11.346 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:24:11.347 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:24:11.369 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:11.395 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:11.464 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:11.467 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 281(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1041,"totalPage":105},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:11.559 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:16.449 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:24:16.451 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:24:16.508 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:16.572 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:24:16.573 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:24:16.618 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:16.675 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:16.680 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=105, totalCount=1041, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 245(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1042,"totalPage":105},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:16.774 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:22.349 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:24:22.350 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:24:22.402 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:22.453 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:24:22.454 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:24:22.500 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:22.559 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:22.562 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=105, totalCount=1042, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":1043,"totalPage":105},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:22.656 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:27.136 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:27.139 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:27.212 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:27.271 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:27.273 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:27.318 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:27.374 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:27.377 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=105, totalCount=1043, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 266(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:27.472 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:31.853 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:31.855 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:31.905 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:31.958 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:31.959 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:32.005 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:32.074 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:32.077 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 211(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:32.169 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:32.292 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:32.293 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:32.342 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:32.393 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:32.394 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:32.474 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:32.540 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:32.545 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 242(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:32.638 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:32.742 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:32.743 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:32.793 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:32.844 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:32.845 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:32.890 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:32.922 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:32.924 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:32.943 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:32.947 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:32.975 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.027 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.028 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.039 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.069 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.070 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.074 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.119 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.130 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.133 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.173 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.174 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.219 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.231 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.234 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.236 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.276 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.280 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 212(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.284 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.338 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.339 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.380 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.381 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.384 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.391 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.432 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.439 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.442 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.482 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.483 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.530 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.533 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.561 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.563 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.585 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.587 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 206(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.614 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.669 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.671 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.682 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.717 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.717 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.718 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.766 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.772 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.774 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.817 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.818 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:33.863 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:33.867 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:33.884 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:33.885 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:33.919 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:33.922 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:33.934 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:33.988 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:33.989 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:34.015 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:34.035 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:34.048 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:34.049 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:34.090 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:34.092 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 211(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:34.096 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:34.150 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:34.151 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:34.187 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:34.196 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:34.210 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:34.212 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:34.253 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:34.255 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 206(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:34.259 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:34.311 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:34.313 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:34.347 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:34.359 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:34.413 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:34.416 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 211(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:34.446 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2020-08-24 22:24:34.448 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2020-08-24 22:24:34.500 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:24:34.508 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:24:34.553 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2020-08-24 22:24:34.555 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: GET(String)
2020-08-24 22:24:34.599 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:24:34.652 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:24:34.654 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=44, totalCount=434, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=16, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:26), Log(logId=20, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=14, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:20:04), Log(logId=21, logUrl=/type/getList, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=12, logResult={"code":2000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"springboot"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:21:08), Log(logId=26, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"enable":1},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:45:57), Log(logId=28, logUrl=/type/getById/3, logParams=[3], logStatus=1, logMessage=null, logMethod=GET, logTime=19, logResult={"code":2000,"data":{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:17), Log(logId=29, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=13, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:48:29), Log(logId=31, logUrl=/type/listBack, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=28, logResult={"code":2000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"前端"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 12:43:48), Log(logId=36, logUrl=/link/list, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=17, logResult={"code":2000,"data":[{"createdTime":"2020-07-05 13:28:41.0","linkId":1,"linkName":"百度","linkUrl":"www.bai.com","updateTime":"2020-07-05 13:28:41.0"},{"createdTime":"2020-07-05 13:31:19.0","linkId":2,"linkName":"秋生的小站","linkUrl":"https://zhipeng0908.gitee.io/","updateTime":"2020-07-05 13:31:19.0"},{"createdTime":"2020-07-05 13:34:17.0","linkId":3,"linkName":"鸡哥的博客","linkUrl":"https://me.csdn.net/qq_36403693","updateTime":"2020-07-05 13:34:17.0"}],"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:36:43)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 01:19:26","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:20:04","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":14,"logUrl":"/type/listBack"},{"createdTime":"2020-07-02 01:21:08","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"springboot\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":12,"logUrl":"/type/getList"},{"createdTime":"2020-07-02 01:45:57","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:17","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":2000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19,"logUrl":"/type/getById/3"},{"createdTime":"2020-07-02 01:48:29","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 12:43:48","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":1,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":2,\"typeName\":\"linux\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":3,\"typeName\":\"前端\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":28,"logUrl":"/type/listBack"},{"createdTime":"2020-07-05 13:36:43","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":[{\"createdTime\":\"2020-07-05 13:28:41.0\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.bai.com\",\"updateTime\":\"2020-07-05 13:28:41.0\"},{\"createdTime\":\"2020-07-05 13:31:19.0\",\"linkId\":2,\"linkName\":\"秋生的小站\",\"linkUrl\":\"https://zhipeng0908.gitee.io/\",\"updateTime\":\"2020-07-05 13:31:19.0\"},{\"createdTime\":\"2020-07-05 13:34:17.0\",\"linkId\":3,\"linkName\":\"鸡哥的博客\",\"linkUrl\":\"https://me.csdn.net/qq_36403693\",\"updateTime\":\"2020-07-05 13:34:17.0\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/link/list"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":434,"totalPage":44},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:24:34.746 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:25:02.546 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:25:21.564 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:25:21.610 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:25:21.713 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:25:21.900 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:25:21.911 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 282(Long), {"code":20000,"data":{"token":"5061A409699FF6EEDCCBB08201884D46"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:25:22.002 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:25:22.157 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:25:22.160 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:25:22.263 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:25:22.765 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:25:22.767 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:25:22.848 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:25:22.923 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:25:22.926 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'params.logStatus !=null and'. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:52)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$b65e74ab.getByPage(<generated>)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'params.logStatus !=null and'. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-08-24 22:25:22.987 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:25:22.988 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:25:23.019 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:25:23.034 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:25:23.099 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:25:23.101 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:25:23.193 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:25:35.392 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:25:35.394 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-08-24 22:25:35.451 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:25:35.508 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:25:35.511 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={logStatus=1}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'params.logStatus !=null and'. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
	at com.lzy.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:52)
	at com.lzy.blog.controller.LogController.getByPage(LogController.java:43)
	at com.lzy.blog.controller.LogController$$FastClassBySpringCGLIB$$354c68aa.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LogController$$EnhancerBySpringCGLIB$$b65e74ab.getByPage(<generated>)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'params.logStatus !=null and'. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: params.logStatus !=null and [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 27.
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-08-24 22:25:35.602 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:26:04.031 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:26:30.989 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:26:31.077 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:26:31.196 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:26:31.460 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:26:31.470 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 370(Long), {"code":20000,"data":{"token":"7624ABDE8A4E0EE0B759B7C028B66567"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:26:31.559 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:26:31.786 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:26:31.788 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:26:31.876 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:26:32.833 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:26:32.835 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:26:32.881 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:26:32.948 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:26:32.951 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 138(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:26:32.978 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:26:32.981 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:26:33.042 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:26:33.053 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:26:33.122 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:26:33.123 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:26:33.188 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:26:33.270 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:26:33.278 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 367(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1066,"totalPage":107},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:26:33.372 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:26:57.713 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:26:57.715 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2020-08-24 22:26:57.773 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:26:57.840 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:26:57.841 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 0(Integer)
2020-08-24 22:26:57.889 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:26:57.948 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:26:57.954 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=107, totalCount=1066, index=0, list=[Log(logId=5, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=25, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-01 15:50:45), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=181, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:04), Log(logId=7, logUrl=/admin/getLoginInfo, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=7, logResult={"code":2000,"data":{"name":"刘哥","password":"","signature":"一动可搬山，可倒海","username":"刘小少"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:54:28), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=17, logResult={"code":2000,"data":{"token":"7933145F4818150DEDC6D3C12C578219"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:56:34), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=161, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 00:59:40), Log(logId=10, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=13, logResult={"code":2000,"data":{"token":"61762D7D9FD86197E62B37661ABD197D"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:07:05), Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=12, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=194, logResult={"code":2000,"data":{"token":"1CCEF2D4D4ED2CD805949CE5C776501A"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:14:43), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=203, logResult={"code":2000,"data":{"token":"E81613503EA0A8AAF58255FD817ED00C"},"msg":"操作成功!"}, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:17:21)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 243(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":62,"totalPage":7},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:26:58.053 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:27:01.304 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:27:01.307 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2020-08-24 22:27:01.361 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:27:01.414 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:27:01.415 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String)
2020-08-24 22:27:01.462 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:27:01.522 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:27:01.528 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=7, totalCount=62, index=0, list=[Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=18, logUrl=/type/save, logParams=[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 该分类已经存在！
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:47), Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=67, logUrl=/blog/save, logParams=[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:04:36), Log(logId=73, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:13:59), Log(logId=76, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:15:49), Log(logId=77, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:17:05), Log(logId=79, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:25:50), Log(logId=81, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:29:07)], params={logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 237(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":""},"sortMethod":"asc","totalCount":62,"totalPage":7},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:27:01.626 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:27:39.783 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2020-08-24 22:27:39.785 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2020-08-24 22:27:39.840 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:27:39.894 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2020-08-24 22:27:39.896 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: (String)
2020-08-24 22:27:39.942 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:27:40.003 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:27:40.010 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=7, totalCount=62, index=0, list=[Log(logId=11, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:10:42), Log(logId=13, logUrl=/type/save, logParams=[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:15:06), Log(logId=18, logUrl=/type/save, logParams=[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)], logStatus=0, logMessage=com.lzy.blog.exception.BlogException: 该分类已经存在！
	at com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)
	at com.lzy.blog.controller.TypeController.save(TypeController.java:31)
	at com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-02 01:19:47), Log(logId=37, logUrl=/link/update, logParams=[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
	at com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)
	at com.lzy.blog.controller.LingkController.update(LingkController.java:41)
	at com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'
, logMethod=PUT, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-05 13:38:23), Log(logId=67, logUrl=/blog/save, logParams=[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)
	at com.lzy.blog.controller.BlogController.save(BlogController.java:37)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:04:36), Log(logId=73, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:13:59), Log(logId=76, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:15:49), Log(logId=77, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:17:05), Log(logId=79, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:25:50), Log(logId=81, logUrl=/blog/getByPage, logParams=[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
	at com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)
	at com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)
	at com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)
	at com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)
	at com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'
, logMethod=POST, logTime=0, logResult=null, logIp=0:0:0:0:0:0:0:1, createdTime=2020-07-06 12:29:07)], params={logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:19:47","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.lzy.blog.exception.BlogException: 该分类已经存在！\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:42)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$f758cd40.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=linux, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-05 13:38:23","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n\tat com.lzy.blog.service.impl.LinkServiceImpl.update(LinkServiceImpl.java:60)\n\tat com.lzy.blog.controller.LingkController.update(LingkController.java:41)\n\tat com.lzy.blog.controller.LingkController$$FastClassBySpringCGLIB$$955898db.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.LingkController$$EnhancerBySpringCGLIB$$b6305dbf.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'link_name' in 'class com.lzy.blog.pojo.Link'\n","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/link/update"},{"createdTime":"2020-07-06 12:04:36","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.lzy.blog.mapper.BlogMapper.save-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.lzy.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:50)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.save(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.save(<generated>)\n\tat com.lzy.blog.controller.BlogController.save(BlogController.java:37)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=闲言博客1, blogImage=null, blogContent=这是休闲博客, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-07-06 12:13:59","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$61576f80.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$f09ccdda.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$34bd7248.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:15:49","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:17:05","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$974dfb44.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2693599e.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$c81bd8e5.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:25:50","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$906b3933.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1fb0978d.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$e390a3fe.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"},{"createdTime":"2020-07-06 12:29:07","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n\tat com.lzy.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:113)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1aa22e59.getByPage(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e1730aba.invoke(<generated>)\n\tat com.lzy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a9e78cb3.getByPage(<generated>)\n\tat com.lzy.blog.controller.BlogController.getByPage(BlogController.java:101)\n\tat com.lzy.blog.controller.BlogController$$FastClassBySpringCGLIB$$9b375774.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$293c5425.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'bull' in 'class com.lzy.blog.utils.PageUtils'\n","logMethod":"POST","logParams":"[PageUtils(currentPage=1, pageSize=2, totalPage=0, totalCount=0, index=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/blog/getByPage"}],"pageSize":10,"params":{"logStatus":""},"sortMethod":"asc","totalCount":62,"totalPage":7},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:27:40.110 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:27:43.917 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 22:27:43.919 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:27:43.996 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 22:27:44.073 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 22:27:44.075 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:27:44.120 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:27:44.179 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:27:44.182 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 281(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:27:44.283 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:27:45.801 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:27:45.803 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:27:45.861 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:27:45.928 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:27:45.930 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:27:45.977 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:27:46.078 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:27:46.084 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1071,"totalPage":108},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:27:46.183 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:58:48.160 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 22:59:26.893 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:59:27.499 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:59:28.532 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:59:29.115 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:29.121 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 4337(Long), {"code":20000,"data":{"token":"B044DDA2F49B4FE7F1B7B1CDF80C87A3"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:59:29.216 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:59:33.389 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 22:59:33.392 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 22:59:33.438 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 22:59:33.496 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:33.499 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 112(Long), {"code":20000,"data":{"token":"B044DDA2F49B4FE7F1B7B1CDF80C87A3"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:59:33.593 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:59:33.699 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:33.702 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:59:33.803 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:59:34.647 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 22:59:34.650 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 22:59:34.700 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 22:59:34.767 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:34.770 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 146(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:59:34.841 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 22:59:34.843 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 22:59:34.864 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:59:34.906 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 22:59:34.966 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 22:59:34.968 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 22:59:35.018 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 22:59:35.101 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:35.106 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 338(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1076,"totalPage":108},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 22:59:35.201 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 22:59:38.175 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getAll.debug:159 -==>  Preparing: select log_id, log_url, log_status, log_message, log_method, log_time, log_ip, created_time from bl_log 
2020-08-24 22:59:38.177 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getAll.debug:159 -==> Parameters: 
2020-08-24 22:59:38.541 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.getAll.debug:159 -<==      Total: 1077
2020-08-24 22:59:41.410 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 22:59:41.415 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/export(String), [com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper@2bb9adfd](String), 1(Integer), null, POST(String), 3231(Long), null(String), 127.0.0.1(String)
2020-08-24 22:59:41.510 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:42:14.058 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 23:42:14.062 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 23:42:14.109 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 23:42:14.170 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:42:14.175 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 135(Long), {"code":20000,"data":{"token":"BB7ADBD87F4679DD0BC34B57A09D3138"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:42:14.267 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:42:14.372 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:42:14.374 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:42:14.466 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:42:15.193 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:42:15.195 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-08-24 23:42:15.195 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:42:15.196 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:42:15.243 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:42:15.251 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-08-24 23:42:15.319 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:42:15.323 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:42:15.326 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-08-24 23:42:15.328 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:42:15.377 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:42:15.416 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:42:15.434 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:42:15.436 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 260(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-01 15:50:45","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":25,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:54:04","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":181,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:54:28","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":2000,\"data\":{\"name\":\"刘哥\",\"password\":\"\",\"signature\":\"一动可搬山，可倒海\",\"username\":\"刘小少\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":7,"logUrl":"/admin/getLoginInfo"},{"createdTime":"2020-07-02 00:56:34","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"7933145F4818150DEDC6D3C12C578219\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":17,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 00:59:40","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":161,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:07:05","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"61762D7D9FD86197E62B37661ABD197D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":13,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:10:42","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$81a23d8b.save(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'type_name' in 'class com.lzy.blog.pojo.Type'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:14:43","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"1CCEF2D4D4ED2CD805949CE5C776501A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":194,"logUrl":"/admin/login"},{"createdTime":"2020-07-02 01:15:06","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n### The error may involve com.lzy.blog.mapper.TypeMapper.insert-Inline\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n\tat com.lzy.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:45)\n\tat com.lzy.blog.controller.TypeController.save(TypeController.java:31)\n\tat com.lzy.blog.controller.TypeController$$FastClassBySpringCGLIB$$775f190c.invoke(<generated>)\n\tat com.lzy.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lzy.blog.controller.TypeController$$EnhancerBySpringCGLIB$$38b682be.save(<generated>)\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'type_name' in 'field list'\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-07-02 01:17:21","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=刘小少, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":2000,\"data\":{\"token\":\"E81613503EA0A8AAF58255FD817ED00C\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":203,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1080,"totalPage":108},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:42:15.536 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:42:22.543 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:42:22.546 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:42:22.616 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:42:22.677 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:42:22.678 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:42:22.723 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:42:22.791 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:42:22.792 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 281(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:42:22.887 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:45:20.710 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:45:20.711 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:45:20.757 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:45:20.809 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:45:20.810 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:45:20.857 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:45:20.913 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:45:20.916 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:45:21.008 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:45:40.853 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 23:45:40.854 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 23:45:40.899 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 23:45:40.956 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:45:40.958 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 104(Long), {"code":20000,"data":{"token":"DE314471A69050FC2A8F9774BF69B07F"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:45:41.051 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:45:41.283 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:45:41.285 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:45:41.380 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:45:44.455 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:45:44.457 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:45:44.477 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 23:45:44.478 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:45:44.503 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:45:44.526 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:45:44.555 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:45:44.556 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:45:44.581 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 23:45:44.582 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:45:44.628 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:45:44.649 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:45:44.693 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:45:44.696 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:45:44.789 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:15.467 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:15.470 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:15.560 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:15.700 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:15.701 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:15.793 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:16.366 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:46:16.368 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:46:16.418 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:46:16.419 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:46:16.421 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:46:16.428 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?,? 
2020-08-24 23:46:16.429 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:46:16.467 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:46:16.476 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:46:16.477 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:46:16.478 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:46:16.522 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:46:16.525 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:16.526 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:16.534 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-08-24 23:46:16.535 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:46:16.578 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:16.579 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:16.580 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.UserMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:46:16.619 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:16.639 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:16.641 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-07-06 23:20:55","name":"刘昭源","nickname":"小源","sex":1,"updateTime":"2020-08-24 20:34:24","userEmail":"1969568111@qq.com","userId":1,"username":"小少"},{"createdTime":"2020-07-06 23:21:55","name":"赵云","nickname":"小云云","sex":1,"updateTime":"2020-07-06 23:21:55","userEmail":"1234567@qq.com","userId":2,"username":"小云"},{"createdTime":"2020-07-06 23:22:22","name":"诸葛亮","nickname":"小诸葛","sex":1,"updateTime":"2020-08-24 22:00:26","userEmail":"95687122@qq.com","userId":3,"username":"小诸葛"},{"createdTime":"2020-07-06 23:23:11","name":"钱多多","nickname":"没钱","sex":1,"updateTime":"2020-07-06 23:23:11","userEmail":"65866223@qq.com","userId":4,"username":"小钱"},{"createdTime":"2020-07-06 23:23:53","name":"张飞","nickname":"小飞飞","sex":1,"updateTime":"2020-07-06 23:28:44","userEmail":"11111111@qq.com","userId":5,"username":"小飞"},{"createdTime":"2020-08-24 21:23:17","name":"test001","nickname":"小红","sex":2,"updateTime":"2020-08-24 21:23:17","userEmail":"1111223554@123.com","userId":6,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:16.671 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:16.677 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:46:16.678 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:46:16.724 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:46:16.734 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:16.781 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:16.782 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:16.874 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:46:20.726 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:46:20.728 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:46:20.774 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:46:20.828 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:46:20.829 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:46:20.876 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:46:20.934 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:46:20.935 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:46:21.028 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:49:10.607 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 23:51:27.481 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 23:51:27.597 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 23:51:27.735 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 23:51:28.069 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:28.078 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 392(Long), {"code":20000,"data":{"token":"25D2F9150BB05F4D513C3A9940EDB617"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:28.173 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:28.387 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:28.390 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:28.484 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:29.318 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:51:29.320 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:51:29.368 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:51:29.439 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:29.442 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:29.537 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:29.555 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:51:29.556 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:51:29.632 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:51:29.685 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:51:29.687 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:51:29.735 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:51:29.816 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:29.818 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 414(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:29.912 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:37.117 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:37.119 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:37.212 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:38.147 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:51:38.148 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:51:38.154 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:51:38.155 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:51:38.194 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:51:38.208 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:51:38.251 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:38.254 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:38.261 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:51:38.262 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:51:38.309 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:51:38.349 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:38.367 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:38.371 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 215(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:38.464 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:47.093 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where id = ? and deleted = 0 
2020-08-24 23:51:47.095 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 23:51:47.148 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-08-24 23:51:47.227 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ?, artist = ?, url = ?, cover = ?, enable = ? where id = ? 
2020-08-24 23:51:47.230 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 旧梦一场(String), 阿悠悠(String), xxx(String), xxx(String), 0(Integer), 1(Integer)
2020-08-24 23:51:47.325 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-08-24 23:51:47.381 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:47.383 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/disEnable/1(String), [1](String), 1(Integer), null, PUT(String), 292(Long), {"code":20000,"msg":"弃用成功！"}(String), 127.0.0.1(String)
2020-08-24 23:51:47.478 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:47.587 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:51:47.589 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:51:47.646 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:51:47.701 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:51:47.702 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:51:47.749 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:51:47.806 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:47.809 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":0,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:47.905 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:52.306 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where id = ? and deleted = 0 
2020-08-24 23:51:52.308 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-24 23:51:52.353 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-08-24 23:51:52.406 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ?, artist = ?, url = ?, cover = ?, enable = ? where id = ? 
2020-08-24 23:51:52.408 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 旧梦一场(String), 阿悠悠(String), xxx(String), xxx(String), 1(Integer), 1(Integer)
2020-08-24 23:51:52.504 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-08-24 23:51:52.569 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:52.571 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/enable/1(String), [1](String), 1(Integer), null, PUT(String), 256(Long), {"code":20000,"msg":"启用成功！"}(String), 127.0.0.1(String)
2020-08-24 23:51:52.663 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:51:52.754 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:51:52.756 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:51:52.808 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:51:52.861 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:51:52.862 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:51:52.910 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:51:52.968 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:51:52.971 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=0, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 218(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:51:53.064 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:08.664 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:08.665 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:08.727 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:08.798 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:08.800 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:08.847 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:08.923 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:08.926 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 252(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:09.022 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:09.450 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:09.452 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:09.516 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:09.585 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:09.587 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:09.634 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:09.704 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:09.706 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=desc)](String), 1(Integer), null, POST(String), 250(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:09.801 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:10.217 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:10.217 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:10.280 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:10.337 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:10.337 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:10.386 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:10.444 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:10.445 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:10.538 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:10.953 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:10.954 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:11.006 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:11.066 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:11.068 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:11.119 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:11.185 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:11.187 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=desc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:11.283 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:11.365 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:11.366 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:11.419 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:11.485 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:11.488 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:11.538 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:11.598 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:11.602 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:11.696 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:11.995 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:11.997 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:12.056 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:12.115 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:12.117 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:12.163 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:12.218 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:12.220 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=desc)](String), 1(Integer), null, POST(String), 234(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:12.314 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:17.306 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:17.308 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:17.366 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:17.429 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:17.430 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:17.475 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:17.543 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:17.547 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:17.641 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:18.161 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:18.163 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:18.219 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:18.271 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:18.272 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:18.321 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:18.396 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:18.399 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 219(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:18.494 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:18.563 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:18.564 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:18.626 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:18.684 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:18.685 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:18.731 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:18.791 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:18.793 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:18.888 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:18.953 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:18.954 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:19.003 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:19.064 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:19.067 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:19.113 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:19.182 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:19.184 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 215(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:19.276 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:19.467 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:19.469 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:19.524 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:19.589 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:19.590 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:19.637 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:19.713 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:19.715 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 248(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:19.809 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:30.280 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:30.281 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:30.328 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:30.382 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:30.383 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:30.430 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:30.487 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:30.488 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=enable, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"enable","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:30.581 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:30.758 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:30.760 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:30.806 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:30.855 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:30.856 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:30.901 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:30.968 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:30.969 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:31.063 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:31.664 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:31.667 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:31.716 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:31.780 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:31.782 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:31.830 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:31.883 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:31.884 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=enable, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"enable","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:31.968 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:31.970 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:31.978 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:32.016 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:32.068 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:32.069 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:32.114 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:32.171 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:32.174 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=enable, sortMethod=desc)](String), 1(Integer), null, POST(String), 199(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"enable","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:32.267 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:32.307 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:32.308 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:32.357 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:32.412 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:32.413 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:32.459 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:32.469 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:32.470 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:32.515 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:32.518 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:32.517 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:32.569 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:32.570 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:32.611 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:32.616 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:32.669 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:32.671 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=enable, sortMethod=desc)](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"enable","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:32.764 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:33.525 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:33.525 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:33.572 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:33.628 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:33.630 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:33.675 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:33.729 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:33.732 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:33.778 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:33.779 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:33.825 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:33.825 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:33.878 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:33.879 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:33.924 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:33.974 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:33.975 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 199(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:33.993 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:33.994 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.040 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:34.068 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:34.103 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:34.104 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:34.149 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:34.206 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:34.208 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:34.252 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:34.254 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.300 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:34.300 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:34.350 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:34.351 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:34.377 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:34.378 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.396 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:34.424 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:34.447 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:34.448 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:34.474 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:34.474 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:34.519 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:34.524 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:34.524 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.542 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:34.574 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:34.576 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:34.577 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:34.626 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:34.627 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:34.669 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:34.673 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:34.710 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:34.711 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.732 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:34.733 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:34.758 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:34.813 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:34.814 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:34.825 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:34.860 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:34.914 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:34.916 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 205(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:34.917 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:34.918 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:34.963 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:35.010 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.018 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:35.020 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:35.064 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:35.065 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:35.066 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:35.112 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:35.118 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:35.120 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:35.162 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:35.163 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:35.209 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:35.209 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:35.211 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:35.212 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.256 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:35.261 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:35.262 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:35.309 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:35.310 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:35.356 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:35.356 DEBUG [http-nio-9000-exec-1]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.379 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:35.381 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:35.417 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:35.419 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:35.427 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:35.481 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:35.482 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:35.514 DEBUG [http-nio-9000-exec-2]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.527 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:35.540 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:35.541 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:35.582 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:35.583 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 217(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:35.587 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:35.640 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:35.641 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:35.676 DEBUG [http-nio-9000-exec-3]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.695 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:35.755 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:35.757 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 222(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:35.851 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:35.910 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:35.911 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:35.963 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:36.022 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:36.023 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:36.069 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:36.144 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:36.146 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:36.240 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:36.526 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:36.527 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:36.581 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:36.637 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:36.638 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:36.684 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:36.739 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:36.741 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 228(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:36.833 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:37.381 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:37.382 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:37.436 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:37.495 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:37.496 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:37.540 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:37.557 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:37.558 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:37.611 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:37.612 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:37.615 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 211(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:37.673 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:37.674 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:37.708 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:37.722 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:37.774 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:37.775 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:37.780 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:37.781 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=desc)](String), 1(Integer), null, POST(String), 218(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"desc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:37.826 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:37.882 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:37.906 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:37.907 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:37.951 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:38.009 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:38.012 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 232(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:38.104 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:54:38.130 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:54:38.131 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:54:38.178 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:54:38.230 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:54:38.230 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:54:38.276 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:54:38.335 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:54:38.336 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:54:38.429 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:57:39.778 DEBUG [main]com.lzy.blog.LzyBlogApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-08-24 23:59:40.527 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==>  Preparing: select name,header, signature, username, password from bl_admin where username = ? 
2020-08-24 23:59:40.718 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -==> Parameters: admin(String)
2020-08-24 23:59:40.842 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.AdminMapper.getByUserName.debug:159 -<==      Total: 1
2020-08-24 23:59:41.065 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:41.071 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 602(Long), {"code":20000,"data":{"token":"4FD32FC79713A19A18FB3A650AC46CA0"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:41.165 DEBUG [http-nio-9000-exec-4]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:41.350 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:41.352 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"刘哥","password":"","signature":"不能再忍了","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:41.446 DEBUG [http-nio-9000-exec-5]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:42.225 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id,type_name,type_blog_count from bl_type where deleted = 0 and enable =1 
2020-08-24 23:59:42.227 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-08-24 23:59:42.274 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 3
2020-08-24 23:59:42.353 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:42.356 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":3,"typeName":"前端"},{"typeBlogCount":0,"typeId":4,"typeName":"mysql"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:42.448 DEBUG [http-nio-9000-exec-6]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:42.575 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:59:42.577 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:59:42.632 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:59:42.688 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:59:42.689 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:59:42.736 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:59:42.804 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:42.806 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=0, totalCount=0, index=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 446(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:42.896 DEBUG [http-nio-9000-exec-7]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:47.939 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:59:47.940 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:59:47.993 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:59:48.043 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:59:48.044 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:59:48.088 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:59:48.142 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:48.145 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:48.239 DEBUG [http-nio-9000-exec-8]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:48.573 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:59:48.574 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:59:48.633 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:59:48.695 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:59:48.696 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:59:48.742 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:59:48.798 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:48.800 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:48.892 DEBUG [http-nio-9000-exec-9]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-24 23:59:48.915 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist,url,cover,lrc,created_time, enable,deleted from bl_music where deleted = 0 limit ?,? 
2020-08-24 23:59:48.917 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-08-24 23:59:48.970 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 6
2020-08-24 23:59:49.026 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-08-24 23:59:49.028 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -==> Parameters: 
2020-08-24 23:59:49.076 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.MusicMapper.getCountPage.debug:159 -<==      Total: 1
2020-08-24 23:59:49.135 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?,?,?,?,?,?, ?,? ) 
2020-08-24 23:59:49.137 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [PageUtils(currentPage=1, pageSize=10, totalPage=1, totalCount=6, index=0, list=[Music(id=1, name=旧梦一场, artist=阿悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:00, enable=1, deleted=0), Music(id=2, name=山楂树之恋, artist=程悠悠, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:31, enable=1, deleted=0), Music(id=3, name=说不出再见, artist=谭永麟, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:02:58, enable=1, deleted=0), Music(id=4, name=单身情歌, artist=林志炫, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:11, enable=1, deleted=0), Music(id=5, name=迷人的危险, artist=小刘, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:03:50, enable=1, deleted=0), Music(id=6, name=死亡气球, artist=大司马, url=xxx, cover=xxx, lrc=null, createdTime=2020-07-06 23:04:07, enable=1, deleted=0)], params={}, sortColumn=artist, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"阿悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:00","deleted":0,"enable":1,"id":1,"name":"旧梦一场","url":"xxx"},{"artist":"程悠悠","cover":"xxx","createdTime":"2020-07-06 23:02:31","deleted":0,"enable":1,"id":2,"name":"山楂树之恋","url":"xxx"},{"artist":"谭永麟","cover":"xxx","createdTime":"2020-07-06 23:02:58","deleted":0,"enable":1,"id":3,"name":"说不出再见","url":"xxx"},{"artist":"林志炫","cover":"xxx","createdTime":"2020-07-06 23:03:11","deleted":0,"enable":1,"id":4,"name":"单身情歌","url":"xxx"},{"artist":"小刘","cover":"xxx","createdTime":"2020-07-06 23:03:50","deleted":0,"enable":1,"id":5,"name":"迷人的危险","url":"xxx"},{"artist":"大司马","cover":"xxx","createdTime":"2020-07-06 23:04:07","deleted":0,"enable":1,"id":6,"name":"死亡气球","url":"xxx"}],"pageSize":10,"params":{},"sortColumn":"artist","sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-08-24 23:59:49.229 DEBUG [http-nio-9000-exec-10]com.lzy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
